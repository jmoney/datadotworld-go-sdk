// Code generated by go-swagger; DO NOT EDIT.

package relationships

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// DeleteRelationshipReader is a Reader for the DeleteRelationship structure.
type DeleteRelationshipReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRelationshipReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRelationshipOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRelationshipBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteRelationshipUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRelationshipForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRelationshipNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteRelationshipInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRelationshipOK creates a DeleteRelationshipOK with default headers values
func NewDeleteRelationshipOK() *DeleteRelationshipOK {
	return &DeleteRelationshipOK{}
}

/* DeleteRelationshipOK describes a response with status code 200, with default header values.

successful operation
*/
type DeleteRelationshipOK struct {
	Payload *models.EditActivitiesResultDto
}

func (o *DeleteRelationshipOK) Error() string {
	return fmt.Sprintf("[POST /metadata/relationships/{owner}/delete][%d] deleteRelationshipOK  %+v", 200, o.Payload)
}
func (o *DeleteRelationshipOK) GetPayload() *models.EditActivitiesResultDto {
	return o.Payload
}

func (o *DeleteRelationshipOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EditActivitiesResultDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRelationshipBadRequest creates a DeleteRelationshipBadRequest with default headers values
func NewDeleteRelationshipBadRequest() *DeleteRelationshipBadRequest {
	return &DeleteRelationshipBadRequest{}
}

/* DeleteRelationshipBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteRelationshipBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *DeleteRelationshipBadRequest) Error() string {
	return fmt.Sprintf("[POST /metadata/relationships/{owner}/delete][%d] deleteRelationshipBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteRelationshipBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteRelationshipBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRelationshipUnauthorized creates a DeleteRelationshipUnauthorized with default headers values
func NewDeleteRelationshipUnauthorized() *DeleteRelationshipUnauthorized {
	return &DeleteRelationshipUnauthorized{}
}

/* DeleteRelationshipUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteRelationshipUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *DeleteRelationshipUnauthorized) Error() string {
	return fmt.Sprintf("[POST /metadata/relationships/{owner}/delete][%d] deleteRelationshipUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteRelationshipUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteRelationshipUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRelationshipForbidden creates a DeleteRelationshipForbidden with default headers values
func NewDeleteRelationshipForbidden() *DeleteRelationshipForbidden {
	return &DeleteRelationshipForbidden{}
}

/* DeleteRelationshipForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteRelationshipForbidden struct {
	Payload *models.ErrorMessage
}

func (o *DeleteRelationshipForbidden) Error() string {
	return fmt.Sprintf("[POST /metadata/relationships/{owner}/delete][%d] deleteRelationshipForbidden  %+v", 403, o.Payload)
}
func (o *DeleteRelationshipForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteRelationshipForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRelationshipNotFound creates a DeleteRelationshipNotFound with default headers values
func NewDeleteRelationshipNotFound() *DeleteRelationshipNotFound {
	return &DeleteRelationshipNotFound{}
}

/* DeleteRelationshipNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteRelationshipNotFound struct {
	Payload *models.ErrorMessage
}

func (o *DeleteRelationshipNotFound) Error() string {
	return fmt.Sprintf("[POST /metadata/relationships/{owner}/delete][%d] deleteRelationshipNotFound  %+v", 404, o.Payload)
}
func (o *DeleteRelationshipNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteRelationshipNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRelationshipInternalServerError creates a DeleteRelationshipInternalServerError with default headers values
func NewDeleteRelationshipInternalServerError() *DeleteRelationshipInternalServerError {
	return &DeleteRelationshipInternalServerError{}
}

/* DeleteRelationshipInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteRelationshipInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *DeleteRelationshipInternalServerError) Error() string {
	return fmt.Sprintf("[POST /metadata/relationships/{owner}/delete][%d] deleteRelationshipInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteRelationshipInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteRelationshipInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
