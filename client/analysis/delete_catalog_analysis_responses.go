// Code generated by go-swagger; DO NOT EDIT.

package analysis

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// DeleteCatalogAnalysisReader is a Reader for the DeleteCatalogAnalysis structure.
type DeleteCatalogAnalysisReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCatalogAnalysisReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteCatalogAnalysisOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCatalogAnalysisBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteCatalogAnalysisUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCatalogAnalysisForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteCatalogAnalysisNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCatalogAnalysisInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteCatalogAnalysisOK creates a DeleteCatalogAnalysisOK with default headers values
func NewDeleteCatalogAnalysisOK() *DeleteCatalogAnalysisOK {
	return &DeleteCatalogAnalysisOK{}
}

/* DeleteCatalogAnalysisOK describes a response with status code 200, with default header values.

Analysis has been successfully deleted.
*/
type DeleteCatalogAnalysisOK struct {
	Payload *models.SuccessMessage
}

func (o *DeleteCatalogAnalysisOK) Error() string {
	return fmt.Sprintf("[DELETE /metadata/analysis/{owner}/{id}][%d] deleteCatalogAnalysisOK  %+v", 200, o.Payload)
}
func (o *DeleteCatalogAnalysisOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *DeleteCatalogAnalysisOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCatalogAnalysisBadRequest creates a DeleteCatalogAnalysisBadRequest with default headers values
func NewDeleteCatalogAnalysisBadRequest() *DeleteCatalogAnalysisBadRequest {
	return &DeleteCatalogAnalysisBadRequest{}
}

/* DeleteCatalogAnalysisBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteCatalogAnalysisBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *DeleteCatalogAnalysisBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /metadata/analysis/{owner}/{id}][%d] deleteCatalogAnalysisBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteCatalogAnalysisBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteCatalogAnalysisBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCatalogAnalysisUnauthorized creates a DeleteCatalogAnalysisUnauthorized with default headers values
func NewDeleteCatalogAnalysisUnauthorized() *DeleteCatalogAnalysisUnauthorized {
	return &DeleteCatalogAnalysisUnauthorized{}
}

/* DeleteCatalogAnalysisUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteCatalogAnalysisUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *DeleteCatalogAnalysisUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /metadata/analysis/{owner}/{id}][%d] deleteCatalogAnalysisUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteCatalogAnalysisUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteCatalogAnalysisUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCatalogAnalysisForbidden creates a DeleteCatalogAnalysisForbidden with default headers values
func NewDeleteCatalogAnalysisForbidden() *DeleteCatalogAnalysisForbidden {
	return &DeleteCatalogAnalysisForbidden{}
}

/* DeleteCatalogAnalysisForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteCatalogAnalysisForbidden struct {
	Payload *models.ErrorMessage
}

func (o *DeleteCatalogAnalysisForbidden) Error() string {
	return fmt.Sprintf("[DELETE /metadata/analysis/{owner}/{id}][%d] deleteCatalogAnalysisForbidden  %+v", 403, o.Payload)
}
func (o *DeleteCatalogAnalysisForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteCatalogAnalysisForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCatalogAnalysisNotFound creates a DeleteCatalogAnalysisNotFound with default headers values
func NewDeleteCatalogAnalysisNotFound() *DeleteCatalogAnalysisNotFound {
	return &DeleteCatalogAnalysisNotFound{}
}

/* DeleteCatalogAnalysisNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteCatalogAnalysisNotFound struct {
	Payload *models.ErrorMessage
}

func (o *DeleteCatalogAnalysisNotFound) Error() string {
	return fmt.Sprintf("[DELETE /metadata/analysis/{owner}/{id}][%d] deleteCatalogAnalysisNotFound  %+v", 404, o.Payload)
}
func (o *DeleteCatalogAnalysisNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteCatalogAnalysisNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCatalogAnalysisInternalServerError creates a DeleteCatalogAnalysisInternalServerError with default headers values
func NewDeleteCatalogAnalysisInternalServerError() *DeleteCatalogAnalysisInternalServerError {
	return &DeleteCatalogAnalysisInternalServerError{}
}

/* DeleteCatalogAnalysisInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteCatalogAnalysisInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *DeleteCatalogAnalysisInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /metadata/analysis/{owner}/{id}][%d] deleteCatalogAnalysisInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteCatalogAnalysisInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteCatalogAnalysisInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
