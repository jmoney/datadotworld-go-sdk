// Code generated by go-swagger; DO NOT EDIT.

package analysis

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// PatchCatalogAnalysisReader is a Reader for the PatchCatalogAnalysis structure.
type PatchCatalogAnalysisReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchCatalogAnalysisReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchCatalogAnalysisOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchCatalogAnalysisBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchCatalogAnalysisUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchCatalogAnalysisForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchCatalogAnalysisNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPatchCatalogAnalysisUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchCatalogAnalysisInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchCatalogAnalysisOK creates a PatchCatalogAnalysisOK with default headers values
func NewPatchCatalogAnalysisOK() *PatchCatalogAnalysisOK {
	return &PatchCatalogAnalysisOK{}
}

/* PatchCatalogAnalysisOK describes a response with status code 200, with default header values.

Analysis updated successfully.
*/
type PatchCatalogAnalysisOK struct {
	Payload *models.SuccessMessage
}

func (o *PatchCatalogAnalysisOK) Error() string {
	return fmt.Sprintf("[PATCH /metadata/analysis/{owner}/{id}][%d] patchCatalogAnalysisOK  %+v", 200, o.Payload)
}
func (o *PatchCatalogAnalysisOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *PatchCatalogAnalysisOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCatalogAnalysisBadRequest creates a PatchCatalogAnalysisBadRequest with default headers values
func NewPatchCatalogAnalysisBadRequest() *PatchCatalogAnalysisBadRequest {
	return &PatchCatalogAnalysisBadRequest{}
}

/* PatchCatalogAnalysisBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PatchCatalogAnalysisBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *PatchCatalogAnalysisBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /metadata/analysis/{owner}/{id}][%d] patchCatalogAnalysisBadRequest  %+v", 400, o.Payload)
}
func (o *PatchCatalogAnalysisBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchCatalogAnalysisBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCatalogAnalysisUnauthorized creates a PatchCatalogAnalysisUnauthorized with default headers values
func NewPatchCatalogAnalysisUnauthorized() *PatchCatalogAnalysisUnauthorized {
	return &PatchCatalogAnalysisUnauthorized{}
}

/* PatchCatalogAnalysisUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PatchCatalogAnalysisUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *PatchCatalogAnalysisUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /metadata/analysis/{owner}/{id}][%d] patchCatalogAnalysisUnauthorized  %+v", 401, o.Payload)
}
func (o *PatchCatalogAnalysisUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchCatalogAnalysisUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCatalogAnalysisForbidden creates a PatchCatalogAnalysisForbidden with default headers values
func NewPatchCatalogAnalysisForbidden() *PatchCatalogAnalysisForbidden {
	return &PatchCatalogAnalysisForbidden{}
}

/* PatchCatalogAnalysisForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PatchCatalogAnalysisForbidden struct {
	Payload *models.ErrorMessage
}

func (o *PatchCatalogAnalysisForbidden) Error() string {
	return fmt.Sprintf("[PATCH /metadata/analysis/{owner}/{id}][%d] patchCatalogAnalysisForbidden  %+v", 403, o.Payload)
}
func (o *PatchCatalogAnalysisForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchCatalogAnalysisForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCatalogAnalysisNotFound creates a PatchCatalogAnalysisNotFound with default headers values
func NewPatchCatalogAnalysisNotFound() *PatchCatalogAnalysisNotFound {
	return &PatchCatalogAnalysisNotFound{}
}

/* PatchCatalogAnalysisNotFound describes a response with status code 404, with default header values.

Not found
*/
type PatchCatalogAnalysisNotFound struct {
	Payload *models.ErrorMessage
}

func (o *PatchCatalogAnalysisNotFound) Error() string {
	return fmt.Sprintf("[PATCH /metadata/analysis/{owner}/{id}][%d] patchCatalogAnalysisNotFound  %+v", 404, o.Payload)
}
func (o *PatchCatalogAnalysisNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchCatalogAnalysisNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCatalogAnalysisUnprocessableEntity creates a PatchCatalogAnalysisUnprocessableEntity with default headers values
func NewPatchCatalogAnalysisUnprocessableEntity() *PatchCatalogAnalysisUnprocessableEntity {
	return &PatchCatalogAnalysisUnprocessableEntity{}
}

/* PatchCatalogAnalysisUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type PatchCatalogAnalysisUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *PatchCatalogAnalysisUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /metadata/analysis/{owner}/{id}][%d] patchCatalogAnalysisUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *PatchCatalogAnalysisUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchCatalogAnalysisUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCatalogAnalysisInternalServerError creates a PatchCatalogAnalysisInternalServerError with default headers values
func NewPatchCatalogAnalysisInternalServerError() *PatchCatalogAnalysisInternalServerError {
	return &PatchCatalogAnalysisInternalServerError{}
}

/* PatchCatalogAnalysisInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type PatchCatalogAnalysisInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *PatchCatalogAnalysisInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /metadata/analysis/{owner}/{id}][%d] patchCatalogAnalysisInternalServerError  %+v", 500, o.Payload)
}
func (o *PatchCatalogAnalysisInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchCatalogAnalysisInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
