// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// SearchResourcesReader is a Reader for the SearchResources structure.
type SearchResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchResourcesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchResourcesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchResourcesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchResourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchResourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchResourcesOK creates a SearchResourcesOK with default headers values
func NewSearchResourcesOK() *SearchResourcesOK {
	return &SearchResourcesOK{}
}

/* SearchResourcesOK describes a response with status code 200, with default header values.

successful operation
*/
type SearchResourcesOK struct {
	Payload *models.PaginatedGenericResults
}

func (o *SearchResourcesOK) Error() string {
	return fmt.Sprintf("[POST /search][%d] searchResourcesOK  %+v", 200, o.Payload)
}
func (o *SearchResourcesOK) GetPayload() *models.PaginatedGenericResults {
	return o.Payload
}

func (o *SearchResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginatedGenericResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchResourcesBadRequest creates a SearchResourcesBadRequest with default headers values
func NewSearchResourcesBadRequest() *SearchResourcesBadRequest {
	return &SearchResourcesBadRequest{}
}

/* SearchResourcesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SearchResourcesBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *SearchResourcesBadRequest) Error() string {
	return fmt.Sprintf("[POST /search][%d] searchResourcesBadRequest  %+v", 400, o.Payload)
}
func (o *SearchResourcesBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SearchResourcesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchResourcesUnauthorized creates a SearchResourcesUnauthorized with default headers values
func NewSearchResourcesUnauthorized() *SearchResourcesUnauthorized {
	return &SearchResourcesUnauthorized{}
}

/* SearchResourcesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchResourcesUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *SearchResourcesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /search][%d] searchResourcesUnauthorized  %+v", 401, o.Payload)
}
func (o *SearchResourcesUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SearchResourcesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchResourcesForbidden creates a SearchResourcesForbidden with default headers values
func NewSearchResourcesForbidden() *SearchResourcesForbidden {
	return &SearchResourcesForbidden{}
}

/* SearchResourcesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchResourcesForbidden struct {
	Payload *models.ErrorMessage
}

func (o *SearchResourcesForbidden) Error() string {
	return fmt.Sprintf("[POST /search][%d] searchResourcesForbidden  %+v", 403, o.Payload)
}
func (o *SearchResourcesForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SearchResourcesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchResourcesNotFound creates a SearchResourcesNotFound with default headers values
func NewSearchResourcesNotFound() *SearchResourcesNotFound {
	return &SearchResourcesNotFound{}
}

/* SearchResourcesNotFound describes a response with status code 404, with default header values.

Not found
*/
type SearchResourcesNotFound struct {
	Payload *models.ErrorMessage
}

func (o *SearchResourcesNotFound) Error() string {
	return fmt.Sprintf("[POST /search][%d] searchResourcesNotFound  %+v", 404, o.Payload)
}
func (o *SearchResourcesNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SearchResourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchResourcesInternalServerError creates a SearchResourcesInternalServerError with default headers values
func NewSearchResourcesInternalServerError() *SearchResourcesInternalServerError {
	return &SearchResourcesInternalServerError{}
}

/* SearchResourcesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type SearchResourcesInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *SearchResourcesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /search][%d] searchResourcesInternalServerError  %+v", 500, o.Payload)
}
func (o *SearchResourcesInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SearchResourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
