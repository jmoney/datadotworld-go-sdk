// Code generated by go-swagger; DO NOT EDIT.

package connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetConnectionReader is a Reader for the GetConnection structure.
type GetConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConnectionOK creates a GetConnectionOK with default headers values
func NewGetConnectionOK() *GetConnectionOK {
	return &GetConnectionOK{}
}

/* GetConnectionOK describes a response with status code 200, with default header values.

successful operation
*/
type GetConnectionOK struct {
	Payload *models.ConnectionDto
}

func (o *GetConnectionOK) Error() string {
	return fmt.Sprintf("[GET /connections/{owner}/{id}][%d] getConnectionOK  %+v", 200, o.Payload)
}
func (o *GetConnectionOK) GetPayload() *models.ConnectionDto {
	return o.Payload
}

func (o *GetConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConnectionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectionBadRequest creates a GetConnectionBadRequest with default headers values
func NewGetConnectionBadRequest() *GetConnectionBadRequest {
	return &GetConnectionBadRequest{}
}

/* GetConnectionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetConnectionBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetConnectionBadRequest) Error() string {
	return fmt.Sprintf("[GET /connections/{owner}/{id}][%d] getConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetConnectionBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectionNotFound creates a GetConnectionNotFound with default headers values
func NewGetConnectionNotFound() *GetConnectionNotFound {
	return &GetConnectionNotFound{}
}

/* GetConnectionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetConnectionNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetConnectionNotFound) Error() string {
	return fmt.Sprintf("[GET /connections/{owner}/{id}][%d] getConnectionNotFound  %+v", 404, o.Payload)
}
func (o *GetConnectionNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
