// Code generated by go-swagger; DO NOT EDIT.

package requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetRequestReader is a Reader for the GetRequest structure.
type GetRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRequestOK creates a GetRequestOK with default headers values
func NewGetRequestOK() *GetRequestOK {
	return &GetRequestOK{}
}

/* GetRequestOK describes a response with status code 200, with default header values.

Successfully retrieved dataset
*/
type GetRequestOK struct {
	Payload *models.ResourceRequestDto
}

func (o *GetRequestOK) Error() string {
	return fmt.Sprintf("[GET /requests/{requestid}][%d] getRequestOK  %+v", 200, o.Payload)
}
func (o *GetRequestOK) GetPayload() *models.ResourceRequestDto {
	return o.Payload
}

func (o *GetRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceRequestDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRequestBadRequest creates a GetRequestBadRequest with default headers values
func NewGetRequestBadRequest() *GetRequestBadRequest {
	return &GetRequestBadRequest{}
}

/* GetRequestBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetRequestBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetRequestBadRequest) Error() string {
	return fmt.Sprintf("[GET /requests/{requestid}][%d] getRequestBadRequest  %+v", 400, o.Payload)
}
func (o *GetRequestBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRequestUnauthorized creates a GetRequestUnauthorized with default headers values
func NewGetRequestUnauthorized() *GetRequestUnauthorized {
	return &GetRequestUnauthorized{}
}

/* GetRequestUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRequestUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetRequestUnauthorized) Error() string {
	return fmt.Sprintf("[GET /requests/{requestid}][%d] getRequestUnauthorized  %+v", 401, o.Payload)
}
func (o *GetRequestUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRequestForbidden creates a GetRequestForbidden with default headers values
func NewGetRequestForbidden() *GetRequestForbidden {
	return &GetRequestForbidden{}
}

/* GetRequestForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRequestForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetRequestForbidden) Error() string {
	return fmt.Sprintf("[GET /requests/{requestid}][%d] getRequestForbidden  %+v", 403, o.Payload)
}
func (o *GetRequestForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRequestNotFound creates a GetRequestNotFound with default headers values
func NewGetRequestNotFound() *GetRequestNotFound {
	return &GetRequestNotFound{}
}

/* GetRequestNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetRequestNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetRequestNotFound) Error() string {
	return fmt.Sprintf("[GET /requests/{requestid}][%d] getRequestNotFound  %+v", 404, o.Payload)
}
func (o *GetRequestNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRequestInternalServerError creates a GetRequestInternalServerError with default headers values
func NewGetRequestInternalServerError() *GetRequestInternalServerError {
	return &GetRequestInternalServerError{}
}

/* GetRequestInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetRequestInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetRequestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /requests/{requestid}][%d] getRequestInternalServerError  %+v", 500, o.Payload)
}
func (o *GetRequestInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
