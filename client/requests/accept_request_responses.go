// Code generated by go-swagger; DO NOT EDIT.

package requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// AcceptRequestReader is a Reader for the AcceptRequest structure.
type AcceptRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AcceptRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAcceptRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAcceptRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAcceptRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAcceptRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAcceptRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAcceptRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAcceptRequestOK creates a AcceptRequestOK with default headers values
func NewAcceptRequestOK() *AcceptRequestOK {
	return &AcceptRequestOK{}
}

/* AcceptRequestOK describes a response with status code 200, with default header values.

Successfully retrieved dataset
*/
type AcceptRequestOK struct {
	Payload *models.SuccessMessageDto
}

func (o *AcceptRequestOK) Error() string {
	return fmt.Sprintf("[POST /requests/accept][%d] acceptRequestOK  %+v", 200, o.Payload)
}
func (o *AcceptRequestOK) GetPayload() *models.SuccessMessageDto {
	return o.Payload
}

func (o *AcceptRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessageDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptRequestBadRequest creates a AcceptRequestBadRequest with default headers values
func NewAcceptRequestBadRequest() *AcceptRequestBadRequest {
	return &AcceptRequestBadRequest{}
}

/* AcceptRequestBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AcceptRequestBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *AcceptRequestBadRequest) Error() string {
	return fmt.Sprintf("[POST /requests/accept][%d] acceptRequestBadRequest  %+v", 400, o.Payload)
}
func (o *AcceptRequestBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AcceptRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptRequestUnauthorized creates a AcceptRequestUnauthorized with default headers values
func NewAcceptRequestUnauthorized() *AcceptRequestUnauthorized {
	return &AcceptRequestUnauthorized{}
}

/* AcceptRequestUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AcceptRequestUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *AcceptRequestUnauthorized) Error() string {
	return fmt.Sprintf("[POST /requests/accept][%d] acceptRequestUnauthorized  %+v", 401, o.Payload)
}
func (o *AcceptRequestUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AcceptRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptRequestForbidden creates a AcceptRequestForbidden with default headers values
func NewAcceptRequestForbidden() *AcceptRequestForbidden {
	return &AcceptRequestForbidden{}
}

/* AcceptRequestForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AcceptRequestForbidden struct {
	Payload *models.ErrorMessage
}

func (o *AcceptRequestForbidden) Error() string {
	return fmt.Sprintf("[POST /requests/accept][%d] acceptRequestForbidden  %+v", 403, o.Payload)
}
func (o *AcceptRequestForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AcceptRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptRequestNotFound creates a AcceptRequestNotFound with default headers values
func NewAcceptRequestNotFound() *AcceptRequestNotFound {
	return &AcceptRequestNotFound{}
}

/* AcceptRequestNotFound describes a response with status code 404, with default header values.

Not found
*/
type AcceptRequestNotFound struct {
	Payload *models.ErrorMessage
}

func (o *AcceptRequestNotFound) Error() string {
	return fmt.Sprintf("[POST /requests/accept][%d] acceptRequestNotFound  %+v", 404, o.Payload)
}
func (o *AcceptRequestNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AcceptRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptRequestInternalServerError creates a AcceptRequestInternalServerError with default headers values
func NewAcceptRequestInternalServerError() *AcceptRequestInternalServerError {
	return &AcceptRequestInternalServerError{}
}

/* AcceptRequestInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type AcceptRequestInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *AcceptRequestInternalServerError) Error() string {
	return fmt.Sprintf("[POST /requests/accept][%d] acceptRequestInternalServerError  %+v", 500, o.Payload)
}
func (o *AcceptRequestInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AcceptRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
