// Code generated by go-swagger; DO NOT EDIT.

package requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// RejectRequestReader is a Reader for the RejectRequest structure.
type RejectRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RejectRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRejectRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRejectRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRejectRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRejectRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRejectRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRejectRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRejectRequestOK creates a RejectRequestOK with default headers values
func NewRejectRequestOK() *RejectRequestOK {
	return &RejectRequestOK{}
}

/* RejectRequestOK describes a response with status code 200, with default header values.

Successfully retrieved dataset
*/
type RejectRequestOK struct {
	Payload *models.SuccessMessageDto
}

func (o *RejectRequestOK) Error() string {
	return fmt.Sprintf("[POST /requests/reject][%d] rejectRequestOK  %+v", 200, o.Payload)
}
func (o *RejectRequestOK) GetPayload() *models.SuccessMessageDto {
	return o.Payload
}

func (o *RejectRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessageDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectRequestBadRequest creates a RejectRequestBadRequest with default headers values
func NewRejectRequestBadRequest() *RejectRequestBadRequest {
	return &RejectRequestBadRequest{}
}

/* RejectRequestBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RejectRequestBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *RejectRequestBadRequest) Error() string {
	return fmt.Sprintf("[POST /requests/reject][%d] rejectRequestBadRequest  %+v", 400, o.Payload)
}
func (o *RejectRequestBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *RejectRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectRequestUnauthorized creates a RejectRequestUnauthorized with default headers values
func NewRejectRequestUnauthorized() *RejectRequestUnauthorized {
	return &RejectRequestUnauthorized{}
}

/* RejectRequestUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RejectRequestUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *RejectRequestUnauthorized) Error() string {
	return fmt.Sprintf("[POST /requests/reject][%d] rejectRequestUnauthorized  %+v", 401, o.Payload)
}
func (o *RejectRequestUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *RejectRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectRequestForbidden creates a RejectRequestForbidden with default headers values
func NewRejectRequestForbidden() *RejectRequestForbidden {
	return &RejectRequestForbidden{}
}

/* RejectRequestForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RejectRequestForbidden struct {
	Payload *models.ErrorMessage
}

func (o *RejectRequestForbidden) Error() string {
	return fmt.Sprintf("[POST /requests/reject][%d] rejectRequestForbidden  %+v", 403, o.Payload)
}
func (o *RejectRequestForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *RejectRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectRequestNotFound creates a RejectRequestNotFound with default headers values
func NewRejectRequestNotFound() *RejectRequestNotFound {
	return &RejectRequestNotFound{}
}

/* RejectRequestNotFound describes a response with status code 404, with default header values.

Not found
*/
type RejectRequestNotFound struct {
	Payload *models.ErrorMessage
}

func (o *RejectRequestNotFound) Error() string {
	return fmt.Sprintf("[POST /requests/reject][%d] rejectRequestNotFound  %+v", 404, o.Payload)
}
func (o *RejectRequestNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *RejectRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectRequestInternalServerError creates a RejectRequestInternalServerError with default headers values
func NewRejectRequestInternalServerError() *RejectRequestInternalServerError {
	return &RejectRequestInternalServerError{}
}

/* RejectRequestInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type RejectRequestInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *RejectRequestInternalServerError) Error() string {
	return fmt.Sprintf("[POST /requests/reject][%d] rejectRequestInternalServerError  %+v", 500, o.Payload)
}
func (o *RejectRequestInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *RejectRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
