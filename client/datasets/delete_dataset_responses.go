// Code generated by go-swagger; DO NOT EDIT.

package datasets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// DeleteDatasetReader is a Reader for the DeleteDataset structure.
type DeleteDatasetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDatasetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDatasetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteDatasetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteDatasetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteDatasetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDatasetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDatasetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDatasetOK creates a DeleteDatasetOK with default headers values
func NewDeleteDatasetOK() *DeleteDatasetOK {
	return &DeleteDatasetOK{}
}

/* DeleteDatasetOK describes a response with status code 200, with default header values.

Dataset has been successfully deleted.
*/
type DeleteDatasetOK struct {
	Payload *models.SuccessMessage
}

func (o *DeleteDatasetOK) Error() string {
	return fmt.Sprintf("[DELETE /datasets/{owner}/{id}][%d] deleteDatasetOK  %+v", 200, o.Payload)
}
func (o *DeleteDatasetOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *DeleteDatasetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetBadRequest creates a DeleteDatasetBadRequest with default headers values
func NewDeleteDatasetBadRequest() *DeleteDatasetBadRequest {
	return &DeleteDatasetBadRequest{}
}

/* DeleteDatasetBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteDatasetBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *DeleteDatasetBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /datasets/{owner}/{id}][%d] deleteDatasetBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteDatasetBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteDatasetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetUnauthorized creates a DeleteDatasetUnauthorized with default headers values
func NewDeleteDatasetUnauthorized() *DeleteDatasetUnauthorized {
	return &DeleteDatasetUnauthorized{}
}

/* DeleteDatasetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteDatasetUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *DeleteDatasetUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /datasets/{owner}/{id}][%d] deleteDatasetUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteDatasetUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteDatasetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetForbidden creates a DeleteDatasetForbidden with default headers values
func NewDeleteDatasetForbidden() *DeleteDatasetForbidden {
	return &DeleteDatasetForbidden{}
}

/* DeleteDatasetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteDatasetForbidden struct {
	Payload *models.ErrorMessage
}

func (o *DeleteDatasetForbidden) Error() string {
	return fmt.Sprintf("[DELETE /datasets/{owner}/{id}][%d] deleteDatasetForbidden  %+v", 403, o.Payload)
}
func (o *DeleteDatasetForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteDatasetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetNotFound creates a DeleteDatasetNotFound with default headers values
func NewDeleteDatasetNotFound() *DeleteDatasetNotFound {
	return &DeleteDatasetNotFound{}
}

/* DeleteDatasetNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteDatasetNotFound struct {
	Payload *models.ErrorMessage
}

func (o *DeleteDatasetNotFound) Error() string {
	return fmt.Sprintf("[DELETE /datasets/{owner}/{id}][%d] deleteDatasetNotFound  %+v", 404, o.Payload)
}
func (o *DeleteDatasetNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteDatasetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatasetInternalServerError creates a DeleteDatasetInternalServerError with default headers values
func NewDeleteDatasetInternalServerError() *DeleteDatasetInternalServerError {
	return &DeleteDatasetInternalServerError{}
}

/* DeleteDatasetInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteDatasetInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *DeleteDatasetInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /datasets/{owner}/{id}][%d] deleteDatasetInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteDatasetInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteDatasetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
