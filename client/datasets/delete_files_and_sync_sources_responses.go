// Code generated by go-swagger; DO NOT EDIT.

package datasets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// DeleteFilesAndSyncSourcesReader is a Reader for the DeleteFilesAndSyncSources structure.
type DeleteFilesAndSyncSourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteFilesAndSyncSourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteFilesAndSyncSourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteFilesAndSyncSourcesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteFilesAndSyncSourcesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteFilesAndSyncSourcesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteFilesAndSyncSourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteFilesAndSyncSourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteFilesAndSyncSourcesOK creates a DeleteFilesAndSyncSourcesOK with default headers values
func NewDeleteFilesAndSyncSourcesOK() *DeleteFilesAndSyncSourcesOK {
	return &DeleteFilesAndSyncSourcesOK{}
}

/* DeleteFilesAndSyncSourcesOK describes a response with status code 200, with default header values.

Dataset file(s) have been successfully deleted.
*/
type DeleteFilesAndSyncSourcesOK struct {
	Payload *models.SuccessMessage
}

func (o *DeleteFilesAndSyncSourcesOK) Error() string {
	return fmt.Sprintf("[DELETE /datasets/{owner}/{id}/files][%d] deleteFilesAndSyncSourcesOK  %+v", 200, o.Payload)
}
func (o *DeleteFilesAndSyncSourcesOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *DeleteFilesAndSyncSourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFilesAndSyncSourcesBadRequest creates a DeleteFilesAndSyncSourcesBadRequest with default headers values
func NewDeleteFilesAndSyncSourcesBadRequest() *DeleteFilesAndSyncSourcesBadRequest {
	return &DeleteFilesAndSyncSourcesBadRequest{}
}

/* DeleteFilesAndSyncSourcesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteFilesAndSyncSourcesBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *DeleteFilesAndSyncSourcesBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /datasets/{owner}/{id}/files][%d] deleteFilesAndSyncSourcesBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteFilesAndSyncSourcesBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteFilesAndSyncSourcesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFilesAndSyncSourcesUnauthorized creates a DeleteFilesAndSyncSourcesUnauthorized with default headers values
func NewDeleteFilesAndSyncSourcesUnauthorized() *DeleteFilesAndSyncSourcesUnauthorized {
	return &DeleteFilesAndSyncSourcesUnauthorized{}
}

/* DeleteFilesAndSyncSourcesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteFilesAndSyncSourcesUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *DeleteFilesAndSyncSourcesUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /datasets/{owner}/{id}/files][%d] deleteFilesAndSyncSourcesUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteFilesAndSyncSourcesUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteFilesAndSyncSourcesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFilesAndSyncSourcesForbidden creates a DeleteFilesAndSyncSourcesForbidden with default headers values
func NewDeleteFilesAndSyncSourcesForbidden() *DeleteFilesAndSyncSourcesForbidden {
	return &DeleteFilesAndSyncSourcesForbidden{}
}

/* DeleteFilesAndSyncSourcesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteFilesAndSyncSourcesForbidden struct {
	Payload *models.ErrorMessage
}

func (o *DeleteFilesAndSyncSourcesForbidden) Error() string {
	return fmt.Sprintf("[DELETE /datasets/{owner}/{id}/files][%d] deleteFilesAndSyncSourcesForbidden  %+v", 403, o.Payload)
}
func (o *DeleteFilesAndSyncSourcesForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteFilesAndSyncSourcesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFilesAndSyncSourcesNotFound creates a DeleteFilesAndSyncSourcesNotFound with default headers values
func NewDeleteFilesAndSyncSourcesNotFound() *DeleteFilesAndSyncSourcesNotFound {
	return &DeleteFilesAndSyncSourcesNotFound{}
}

/* DeleteFilesAndSyncSourcesNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteFilesAndSyncSourcesNotFound struct {
	Payload *models.ErrorMessage
}

func (o *DeleteFilesAndSyncSourcesNotFound) Error() string {
	return fmt.Sprintf("[DELETE /datasets/{owner}/{id}/files][%d] deleteFilesAndSyncSourcesNotFound  %+v", 404, o.Payload)
}
func (o *DeleteFilesAndSyncSourcesNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteFilesAndSyncSourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFilesAndSyncSourcesInternalServerError creates a DeleteFilesAndSyncSourcesInternalServerError with default headers values
func NewDeleteFilesAndSyncSourcesInternalServerError() *DeleteFilesAndSyncSourcesInternalServerError {
	return &DeleteFilesAndSyncSourcesInternalServerError{}
}

/* DeleteFilesAndSyncSourcesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteFilesAndSyncSourcesInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *DeleteFilesAndSyncSourcesInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /datasets/{owner}/{id}/files][%d] deleteFilesAndSyncSourcesInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteFilesAndSyncSourcesInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteFilesAndSyncSourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
