// Code generated by go-swagger; DO NOT EDIT.

package datasets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetFileMetadataReader is a Reader for the GetFileMetadata structure.
type GetFileMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFileMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFileMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFileMetadataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFileMetadataUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFileMetadataForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFileMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetFileMetadataUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFileMetadataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFileMetadataOK creates a GetFileMetadataOK with default headers values
func NewGetFileMetadataOK() *GetFileMetadataOK {
	return &GetFileMetadataOK{}
}

/* GetFileMetadataOK describes a response with status code 200, with default header values.

Successfully retrieved metadata of file.
*/
type GetFileMetadataOK struct {
	Payload *models.FileMetadataResponse
}

func (o *GetFileMetadataOK) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/files/{file}/metadata][%d] getFileMetadataOK  %+v", 200, o.Payload)
}
func (o *GetFileMetadataOK) GetPayload() *models.FileMetadataResponse {
	return o.Payload
}

func (o *GetFileMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FileMetadataResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileMetadataBadRequest creates a GetFileMetadataBadRequest with default headers values
func NewGetFileMetadataBadRequest() *GetFileMetadataBadRequest {
	return &GetFileMetadataBadRequest{}
}

/* GetFileMetadataBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetFileMetadataBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetFileMetadataBadRequest) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/files/{file}/metadata][%d] getFileMetadataBadRequest  %+v", 400, o.Payload)
}
func (o *GetFileMetadataBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetFileMetadataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileMetadataUnauthorized creates a GetFileMetadataUnauthorized with default headers values
func NewGetFileMetadataUnauthorized() *GetFileMetadataUnauthorized {
	return &GetFileMetadataUnauthorized{}
}

/* GetFileMetadataUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetFileMetadataUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetFileMetadataUnauthorized) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/files/{file}/metadata][%d] getFileMetadataUnauthorized  %+v", 401, o.Payload)
}
func (o *GetFileMetadataUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetFileMetadataUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileMetadataForbidden creates a GetFileMetadataForbidden with default headers values
func NewGetFileMetadataForbidden() *GetFileMetadataForbidden {
	return &GetFileMetadataForbidden{}
}

/* GetFileMetadataForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetFileMetadataForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetFileMetadataForbidden) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/files/{file}/metadata][%d] getFileMetadataForbidden  %+v", 403, o.Payload)
}
func (o *GetFileMetadataForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetFileMetadataForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileMetadataNotFound creates a GetFileMetadataNotFound with default headers values
func NewGetFileMetadataNotFound() *GetFileMetadataNotFound {
	return &GetFileMetadataNotFound{}
}

/* GetFileMetadataNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetFileMetadataNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetFileMetadataNotFound) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/files/{file}/metadata][%d] getFileMetadataNotFound  %+v", 404, o.Payload)
}
func (o *GetFileMetadataNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetFileMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileMetadataUnprocessableEntity creates a GetFileMetadataUnprocessableEntity with default headers values
func NewGetFileMetadataUnprocessableEntity() *GetFileMetadataUnprocessableEntity {
	return &GetFileMetadataUnprocessableEntity{}
}

/* GetFileMetadataUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type GetFileMetadataUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *GetFileMetadataUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/files/{file}/metadata][%d] getFileMetadataUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *GetFileMetadataUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetFileMetadataUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileMetadataInternalServerError creates a GetFileMetadataInternalServerError with default headers values
func NewGetFileMetadataInternalServerError() *GetFileMetadataInternalServerError {
	return &GetFileMetadataInternalServerError{}
}

/* GetFileMetadataInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetFileMetadataInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetFileMetadataInternalServerError) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/files/{file}/metadata][%d] getFileMetadataInternalServerError  %+v", 500, o.Payload)
}
func (o *GetFileMetadataInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetFileMetadataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
