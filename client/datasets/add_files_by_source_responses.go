// Code generated by go-swagger; DO NOT EDIT.

package datasets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// AddFilesBySourceReader is a Reader for the AddFilesBySource structure.
type AddFilesBySourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddFilesBySourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddFilesBySourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddFilesBySourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddFilesBySourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddFilesBySourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddFilesBySourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewAddFilesBySourceUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddFilesBySourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddFilesBySourceOK creates a AddFilesBySourceOK with default headers values
func NewAddFilesBySourceOK() *AddFilesBySourceOK {
	return &AddFilesBySourceOK{}
}

/* AddFilesBySourceOK describes a response with status code 200, with default header values.

Dataset successfully updated with new sources. Sync in progress.
*/
type AddFilesBySourceOK struct {
	Payload *models.SuccessMessage
}

func (o *AddFilesBySourceOK) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/files][%d] addFilesBySourceOK  %+v", 200, o.Payload)
}
func (o *AddFilesBySourceOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *AddFilesBySourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddFilesBySourceBadRequest creates a AddFilesBySourceBadRequest with default headers values
func NewAddFilesBySourceBadRequest() *AddFilesBySourceBadRequest {
	return &AddFilesBySourceBadRequest{}
}

/* AddFilesBySourceBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AddFilesBySourceBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *AddFilesBySourceBadRequest) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/files][%d] addFilesBySourceBadRequest  %+v", 400, o.Payload)
}
func (o *AddFilesBySourceBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AddFilesBySourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddFilesBySourceUnauthorized creates a AddFilesBySourceUnauthorized with default headers values
func NewAddFilesBySourceUnauthorized() *AddFilesBySourceUnauthorized {
	return &AddFilesBySourceUnauthorized{}
}

/* AddFilesBySourceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddFilesBySourceUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *AddFilesBySourceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/files][%d] addFilesBySourceUnauthorized  %+v", 401, o.Payload)
}
func (o *AddFilesBySourceUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AddFilesBySourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddFilesBySourceForbidden creates a AddFilesBySourceForbidden with default headers values
func NewAddFilesBySourceForbidden() *AddFilesBySourceForbidden {
	return &AddFilesBySourceForbidden{}
}

/* AddFilesBySourceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddFilesBySourceForbidden struct {
	Payload *models.ErrorMessage
}

func (o *AddFilesBySourceForbidden) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/files][%d] addFilesBySourceForbidden  %+v", 403, o.Payload)
}
func (o *AddFilesBySourceForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AddFilesBySourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddFilesBySourceNotFound creates a AddFilesBySourceNotFound with default headers values
func NewAddFilesBySourceNotFound() *AddFilesBySourceNotFound {
	return &AddFilesBySourceNotFound{}
}

/* AddFilesBySourceNotFound describes a response with status code 404, with default header values.

Not found
*/
type AddFilesBySourceNotFound struct {
	Payload *models.ErrorMessage
}

func (o *AddFilesBySourceNotFound) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/files][%d] addFilesBySourceNotFound  %+v", 404, o.Payload)
}
func (o *AddFilesBySourceNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AddFilesBySourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddFilesBySourceUnprocessableEntity creates a AddFilesBySourceUnprocessableEntity with default headers values
func NewAddFilesBySourceUnprocessableEntity() *AddFilesBySourceUnprocessableEntity {
	return &AddFilesBySourceUnprocessableEntity{}
}

/* AddFilesBySourceUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type AddFilesBySourceUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *AddFilesBySourceUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/files][%d] addFilesBySourceUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *AddFilesBySourceUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AddFilesBySourceUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddFilesBySourceInternalServerError creates a AddFilesBySourceInternalServerError with default headers values
func NewAddFilesBySourceInternalServerError() *AddFilesBySourceInternalServerError {
	return &AddFilesBySourceInternalServerError{}
}

/* AddFilesBySourceInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type AddFilesBySourceInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *AddFilesBySourceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/files][%d] addFilesBySourceInternalServerError  %+v", 500, o.Payload)
}
func (o *AddFilesBySourceInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AddFilesBySourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
