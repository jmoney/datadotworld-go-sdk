// Code generated by go-swagger; DO NOT EDIT.

package datasets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// PatchFileMetadataReader is a Reader for the PatchFileMetadata structure.
type PatchFileMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchFileMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchFileMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchFileMetadataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchFileMetadataUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchFileMetadataForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchFileMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPatchFileMetadataUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchFileMetadataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchFileMetadataOK creates a PatchFileMetadataOK with default headers values
func NewPatchFileMetadataOK() *PatchFileMetadataOK {
	return &PatchFileMetadataOK{}
}

/* PatchFileMetadataOK describes a response with status code 200, with default header values.

Successfully updated metadata of file.
*/
type PatchFileMetadataOK struct {
	Payload *models.SuccessMessage
}

func (o *PatchFileMetadataOK) Error() string {
	return fmt.Sprintf("[PATCH /datasets/{owner}/{id}/files/{file}/metadata][%d] patchFileMetadataOK  %+v", 200, o.Payload)
}
func (o *PatchFileMetadataOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *PatchFileMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchFileMetadataBadRequest creates a PatchFileMetadataBadRequest with default headers values
func NewPatchFileMetadataBadRequest() *PatchFileMetadataBadRequest {
	return &PatchFileMetadataBadRequest{}
}

/* PatchFileMetadataBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PatchFileMetadataBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *PatchFileMetadataBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /datasets/{owner}/{id}/files/{file}/metadata][%d] patchFileMetadataBadRequest  %+v", 400, o.Payload)
}
func (o *PatchFileMetadataBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchFileMetadataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchFileMetadataUnauthorized creates a PatchFileMetadataUnauthorized with default headers values
func NewPatchFileMetadataUnauthorized() *PatchFileMetadataUnauthorized {
	return &PatchFileMetadataUnauthorized{}
}

/* PatchFileMetadataUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PatchFileMetadataUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *PatchFileMetadataUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /datasets/{owner}/{id}/files/{file}/metadata][%d] patchFileMetadataUnauthorized  %+v", 401, o.Payload)
}
func (o *PatchFileMetadataUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchFileMetadataUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchFileMetadataForbidden creates a PatchFileMetadataForbidden with default headers values
func NewPatchFileMetadataForbidden() *PatchFileMetadataForbidden {
	return &PatchFileMetadataForbidden{}
}

/* PatchFileMetadataForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PatchFileMetadataForbidden struct {
	Payload *models.ErrorMessage
}

func (o *PatchFileMetadataForbidden) Error() string {
	return fmt.Sprintf("[PATCH /datasets/{owner}/{id}/files/{file}/metadata][%d] patchFileMetadataForbidden  %+v", 403, o.Payload)
}
func (o *PatchFileMetadataForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchFileMetadataForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchFileMetadataNotFound creates a PatchFileMetadataNotFound with default headers values
func NewPatchFileMetadataNotFound() *PatchFileMetadataNotFound {
	return &PatchFileMetadataNotFound{}
}

/* PatchFileMetadataNotFound describes a response with status code 404, with default header values.

Not found
*/
type PatchFileMetadataNotFound struct {
	Payload *models.ErrorMessage
}

func (o *PatchFileMetadataNotFound) Error() string {
	return fmt.Sprintf("[PATCH /datasets/{owner}/{id}/files/{file}/metadata][%d] patchFileMetadataNotFound  %+v", 404, o.Payload)
}
func (o *PatchFileMetadataNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchFileMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchFileMetadataUnprocessableEntity creates a PatchFileMetadataUnprocessableEntity with default headers values
func NewPatchFileMetadataUnprocessableEntity() *PatchFileMetadataUnprocessableEntity {
	return &PatchFileMetadataUnprocessableEntity{}
}

/* PatchFileMetadataUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type PatchFileMetadataUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *PatchFileMetadataUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /datasets/{owner}/{id}/files/{file}/metadata][%d] patchFileMetadataUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *PatchFileMetadataUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchFileMetadataUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchFileMetadataInternalServerError creates a PatchFileMetadataInternalServerError with default headers values
func NewPatchFileMetadataInternalServerError() *PatchFileMetadataInternalServerError {
	return &PatchFileMetadataInternalServerError{}
}

/* PatchFileMetadataInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type PatchFileMetadataInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *PatchFileMetadataInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /datasets/{owner}/{id}/files/{file}/metadata][%d] patchFileMetadataInternalServerError  %+v", 500, o.Payload)
}
func (o *PatchFileMetadataInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchFileMetadataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
