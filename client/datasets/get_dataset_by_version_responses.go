// Code generated by go-swagger; DO NOT EDIT.

package datasets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetDatasetByVersionReader is a Reader for the GetDatasetByVersion structure.
type GetDatasetByVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDatasetByVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDatasetByVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDatasetByVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDatasetByVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDatasetByVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDatasetByVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDatasetByVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDatasetByVersionOK creates a GetDatasetByVersionOK with default headers values
func NewGetDatasetByVersionOK() *GetDatasetByVersionOK {
	return &GetDatasetByVersionOK{}
}

/* GetDatasetByVersionOK describes a response with status code 200, with default header values.

Successfully retrieved dataset version
*/
type GetDatasetByVersionOK struct {
	Payload *models.DatasetSummaryResponse
}

func (o *GetDatasetByVersionOK) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/v/{versionId}][%d] getDatasetByVersionOK  %+v", 200, o.Payload)
}
func (o *GetDatasetByVersionOK) GetPayload() *models.DatasetSummaryResponse {
	return o.Payload
}

func (o *GetDatasetByVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DatasetSummaryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatasetByVersionBadRequest creates a GetDatasetByVersionBadRequest with default headers values
func NewGetDatasetByVersionBadRequest() *GetDatasetByVersionBadRequest {
	return &GetDatasetByVersionBadRequest{}
}

/* GetDatasetByVersionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetDatasetByVersionBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetDatasetByVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/v/{versionId}][%d] getDatasetByVersionBadRequest  %+v", 400, o.Payload)
}
func (o *GetDatasetByVersionBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetDatasetByVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatasetByVersionUnauthorized creates a GetDatasetByVersionUnauthorized with default headers values
func NewGetDatasetByVersionUnauthorized() *GetDatasetByVersionUnauthorized {
	return &GetDatasetByVersionUnauthorized{}
}

/* GetDatasetByVersionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDatasetByVersionUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetDatasetByVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/v/{versionId}][%d] getDatasetByVersionUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDatasetByVersionUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetDatasetByVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatasetByVersionForbidden creates a GetDatasetByVersionForbidden with default headers values
func NewGetDatasetByVersionForbidden() *GetDatasetByVersionForbidden {
	return &GetDatasetByVersionForbidden{}
}

/* GetDatasetByVersionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDatasetByVersionForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetDatasetByVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/v/{versionId}][%d] getDatasetByVersionForbidden  %+v", 403, o.Payload)
}
func (o *GetDatasetByVersionForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetDatasetByVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatasetByVersionNotFound creates a GetDatasetByVersionNotFound with default headers values
func NewGetDatasetByVersionNotFound() *GetDatasetByVersionNotFound {
	return &GetDatasetByVersionNotFound{}
}

/* GetDatasetByVersionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetDatasetByVersionNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetDatasetByVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/v/{versionId}][%d] getDatasetByVersionNotFound  %+v", 404, o.Payload)
}
func (o *GetDatasetByVersionNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetDatasetByVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatasetByVersionInternalServerError creates a GetDatasetByVersionInternalServerError with default headers values
func NewGetDatasetByVersionInternalServerError() *GetDatasetByVersionInternalServerError {
	return &GetDatasetByVersionInternalServerError{}
}

/* GetDatasetByVersionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetDatasetByVersionInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetDatasetByVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /datasets/{owner}/{id}/v/{versionId}][%d] getDatasetByVersionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDatasetByVersionInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetDatasetByVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
