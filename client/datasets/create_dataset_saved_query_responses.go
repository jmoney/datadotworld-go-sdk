// Code generated by go-swagger; DO NOT EDIT.

package datasets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// CreateDatasetSavedQueryReader is a Reader for the CreateDatasetSavedQuery structure.
type CreateDatasetSavedQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDatasetSavedQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateDatasetSavedQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDatasetSavedQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateDatasetSavedQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateDatasetSavedQueryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateDatasetSavedQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateDatasetSavedQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateDatasetSavedQueryOK creates a CreateDatasetSavedQueryOK with default headers values
func NewCreateDatasetSavedQueryOK() *CreateDatasetSavedQueryOK {
	return &CreateDatasetSavedQueryOK{}
}

/* CreateDatasetSavedQueryOK describes a response with status code 200, with default header values.

Successfully created saved query.
*/
type CreateDatasetSavedQueryOK struct {
	Payload *models.QuerySummaryResponse
}

func (o *CreateDatasetSavedQueryOK) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/queries][%d] createDatasetSavedQueryOK  %+v", 200, o.Payload)
}
func (o *CreateDatasetSavedQueryOK) GetPayload() *models.QuerySummaryResponse {
	return o.Payload
}

func (o *CreateDatasetSavedQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QuerySummaryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDatasetSavedQueryBadRequest creates a CreateDatasetSavedQueryBadRequest with default headers values
func NewCreateDatasetSavedQueryBadRequest() *CreateDatasetSavedQueryBadRequest {
	return &CreateDatasetSavedQueryBadRequest{}
}

/* CreateDatasetSavedQueryBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateDatasetSavedQueryBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *CreateDatasetSavedQueryBadRequest) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/queries][%d] createDatasetSavedQueryBadRequest  %+v", 400, o.Payload)
}
func (o *CreateDatasetSavedQueryBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateDatasetSavedQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDatasetSavedQueryUnauthorized creates a CreateDatasetSavedQueryUnauthorized with default headers values
func NewCreateDatasetSavedQueryUnauthorized() *CreateDatasetSavedQueryUnauthorized {
	return &CreateDatasetSavedQueryUnauthorized{}
}

/* CreateDatasetSavedQueryUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateDatasetSavedQueryUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *CreateDatasetSavedQueryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/queries][%d] createDatasetSavedQueryUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateDatasetSavedQueryUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateDatasetSavedQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDatasetSavedQueryForbidden creates a CreateDatasetSavedQueryForbidden with default headers values
func NewCreateDatasetSavedQueryForbidden() *CreateDatasetSavedQueryForbidden {
	return &CreateDatasetSavedQueryForbidden{}
}

/* CreateDatasetSavedQueryForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateDatasetSavedQueryForbidden struct {
	Payload *models.ErrorMessage
}

func (o *CreateDatasetSavedQueryForbidden) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/queries][%d] createDatasetSavedQueryForbidden  %+v", 403, o.Payload)
}
func (o *CreateDatasetSavedQueryForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateDatasetSavedQueryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDatasetSavedQueryNotFound creates a CreateDatasetSavedQueryNotFound with default headers values
func NewCreateDatasetSavedQueryNotFound() *CreateDatasetSavedQueryNotFound {
	return &CreateDatasetSavedQueryNotFound{}
}

/* CreateDatasetSavedQueryNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateDatasetSavedQueryNotFound struct {
	Payload *models.ErrorMessage
}

func (o *CreateDatasetSavedQueryNotFound) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/queries][%d] createDatasetSavedQueryNotFound  %+v", 404, o.Payload)
}
func (o *CreateDatasetSavedQueryNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateDatasetSavedQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDatasetSavedQueryInternalServerError creates a CreateDatasetSavedQueryInternalServerError with default headers values
func NewCreateDatasetSavedQueryInternalServerError() *CreateDatasetSavedQueryInternalServerError {
	return &CreateDatasetSavedQueryInternalServerError{}
}

/* CreateDatasetSavedQueryInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type CreateDatasetSavedQueryInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *CreateDatasetSavedQueryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /datasets/{owner}/{id}/queries][%d] createDatasetSavedQueryInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateDatasetSavedQueryInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateDatasetSavedQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
