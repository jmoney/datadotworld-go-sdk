// Code generated by go-swagger; DO NOT EDIT.

package datasets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// SearchReader is a Reader for the Search structure.
type SearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchOK creates a SearchOK with default headers values
func NewSearchOK() *SearchOK {
	return &SearchOK{}
}

/* SearchOK describes a response with status code 200, with default header values.

Successfully retrieved dataset
*/
type SearchOK struct {
	Payload *models.PaginatedDatasetResults
}

func (o *SearchOK) Error() string {
	return fmt.Sprintf("[GET /datasets/search][%d] searchOK  %+v", 200, o.Payload)
}
func (o *SearchOK) GetPayload() *models.PaginatedDatasetResults {
	return o.Payload
}

func (o *SearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginatedDatasetResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchBadRequest creates a SearchBadRequest with default headers values
func NewSearchBadRequest() *SearchBadRequest {
	return &SearchBadRequest{}
}

/* SearchBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SearchBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *SearchBadRequest) Error() string {
	return fmt.Sprintf("[GET /datasets/search][%d] searchBadRequest  %+v", 400, o.Payload)
}
func (o *SearchBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchUnauthorized creates a SearchUnauthorized with default headers values
func NewSearchUnauthorized() *SearchUnauthorized {
	return &SearchUnauthorized{}
}

/* SearchUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *SearchUnauthorized) Error() string {
	return fmt.Sprintf("[GET /datasets/search][%d] searchUnauthorized  %+v", 401, o.Payload)
}
func (o *SearchUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SearchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForbidden creates a SearchForbidden with default headers values
func NewSearchForbidden() *SearchForbidden {
	return &SearchForbidden{}
}

/* SearchForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchForbidden struct {
	Payload *models.ErrorMessage
}

func (o *SearchForbidden) Error() string {
	return fmt.Sprintf("[GET /datasets/search][%d] searchForbidden  %+v", 403, o.Payload)
}
func (o *SearchForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchNotFound creates a SearchNotFound with default headers values
func NewSearchNotFound() *SearchNotFound {
	return &SearchNotFound{}
}

/* SearchNotFound describes a response with status code 404, with default header values.

Not found
*/
type SearchNotFound struct {
	Payload *models.ErrorMessage
}

func (o *SearchNotFound) Error() string {
	return fmt.Sprintf("[GET /datasets/search][%d] searchNotFound  %+v", 404, o.Payload)
}
func (o *SearchNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SearchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchInternalServerError creates a SearchInternalServerError with default headers values
func NewSearchInternalServerError() *SearchInternalServerError {
	return &SearchInternalServerError{}
}

/* SearchInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type SearchInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *SearchInternalServerError) Error() string {
	return fmt.Sprintf("[GET /datasets/search][%d] searchInternalServerError  %+v", 500, o.Payload)
}
func (o *SearchInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
