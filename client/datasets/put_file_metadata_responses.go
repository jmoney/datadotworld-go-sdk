// Code generated by go-swagger; DO NOT EDIT.

package datasets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// PutFileMetadataReader is a Reader for the PutFileMetadata structure.
type PutFileMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutFileMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutFileMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutFileMetadataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutFileMetadataUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutFileMetadataForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutFileMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPutFileMetadataUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutFileMetadataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutFileMetadataOK creates a PutFileMetadataOK with default headers values
func NewPutFileMetadataOK() *PutFileMetadataOK {
	return &PutFileMetadataOK{}
}

/* PutFileMetadataOK describes a response with status code 200, with default header values.

Successfully replaced metadata of file.
*/
type PutFileMetadataOK struct {
	Payload *models.SuccessMessage
}

func (o *PutFileMetadataOK) Error() string {
	return fmt.Sprintf("[PUT /datasets/{owner}/{id}/files/{file}/metadata][%d] putFileMetadataOK  %+v", 200, o.Payload)
}
func (o *PutFileMetadataOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *PutFileMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFileMetadataBadRequest creates a PutFileMetadataBadRequest with default headers values
func NewPutFileMetadataBadRequest() *PutFileMetadataBadRequest {
	return &PutFileMetadataBadRequest{}
}

/* PutFileMetadataBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PutFileMetadataBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *PutFileMetadataBadRequest) Error() string {
	return fmt.Sprintf("[PUT /datasets/{owner}/{id}/files/{file}/metadata][%d] putFileMetadataBadRequest  %+v", 400, o.Payload)
}
func (o *PutFileMetadataBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PutFileMetadataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFileMetadataUnauthorized creates a PutFileMetadataUnauthorized with default headers values
func NewPutFileMetadataUnauthorized() *PutFileMetadataUnauthorized {
	return &PutFileMetadataUnauthorized{}
}

/* PutFileMetadataUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PutFileMetadataUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *PutFileMetadataUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /datasets/{owner}/{id}/files/{file}/metadata][%d] putFileMetadataUnauthorized  %+v", 401, o.Payload)
}
func (o *PutFileMetadataUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PutFileMetadataUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFileMetadataForbidden creates a PutFileMetadataForbidden with default headers values
func NewPutFileMetadataForbidden() *PutFileMetadataForbidden {
	return &PutFileMetadataForbidden{}
}

/* PutFileMetadataForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutFileMetadataForbidden struct {
	Payload *models.ErrorMessage
}

func (o *PutFileMetadataForbidden) Error() string {
	return fmt.Sprintf("[PUT /datasets/{owner}/{id}/files/{file}/metadata][%d] putFileMetadataForbidden  %+v", 403, o.Payload)
}
func (o *PutFileMetadataForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PutFileMetadataForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFileMetadataNotFound creates a PutFileMetadataNotFound with default headers values
func NewPutFileMetadataNotFound() *PutFileMetadataNotFound {
	return &PutFileMetadataNotFound{}
}

/* PutFileMetadataNotFound describes a response with status code 404, with default header values.

Not found
*/
type PutFileMetadataNotFound struct {
	Payload *models.ErrorMessage
}

func (o *PutFileMetadataNotFound) Error() string {
	return fmt.Sprintf("[PUT /datasets/{owner}/{id}/files/{file}/metadata][%d] putFileMetadataNotFound  %+v", 404, o.Payload)
}
func (o *PutFileMetadataNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PutFileMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFileMetadataUnprocessableEntity creates a PutFileMetadataUnprocessableEntity with default headers values
func NewPutFileMetadataUnprocessableEntity() *PutFileMetadataUnprocessableEntity {
	return &PutFileMetadataUnprocessableEntity{}
}

/* PutFileMetadataUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type PutFileMetadataUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *PutFileMetadataUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /datasets/{owner}/{id}/files/{file}/metadata][%d] putFileMetadataUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *PutFileMetadataUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PutFileMetadataUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFileMetadataInternalServerError creates a PutFileMetadataInternalServerError with default headers values
func NewPutFileMetadataInternalServerError() *PutFileMetadataInternalServerError {
	return &PutFileMetadataInternalServerError{}
}

/* PutFileMetadataInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type PutFileMetadataInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *PutFileMetadataInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /datasets/{owner}/{id}/files/{file}/metadata][%d] putFileMetadataInternalServerError  %+v", 500, o.Payload)
}
func (o *PutFileMetadataInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PutFileMetadataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
