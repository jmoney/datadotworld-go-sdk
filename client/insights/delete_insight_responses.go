// Code generated by go-swagger; DO NOT EDIT.

package insights

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// DeleteInsightReader is a Reader for the DeleteInsight structure.
type DeleteInsightReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteInsightReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteInsightOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteInsightBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteInsightUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteInsightForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteInsightNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteInsightInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteInsightOK creates a DeleteInsightOK with default headers values
func NewDeleteInsightOK() *DeleteInsightOK {
	return &DeleteInsightOK{}
}

/* DeleteInsightOK describes a response with status code 200, with default header values.

Insight has been successfully deleted.
*/
type DeleteInsightOK struct {
	Payload *models.SuccessMessage
}

func (o *DeleteInsightOK) Error() string {
	return fmt.Sprintf("[DELETE /insights/{projectOwner}/{projectId}/{id}][%d] deleteInsightOK  %+v", 200, o.Payload)
}
func (o *DeleteInsightOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *DeleteInsightOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInsightBadRequest creates a DeleteInsightBadRequest with default headers values
func NewDeleteInsightBadRequest() *DeleteInsightBadRequest {
	return &DeleteInsightBadRequest{}
}

/* DeleteInsightBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteInsightBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *DeleteInsightBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /insights/{projectOwner}/{projectId}/{id}][%d] deleteInsightBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteInsightBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteInsightBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInsightUnauthorized creates a DeleteInsightUnauthorized with default headers values
func NewDeleteInsightUnauthorized() *DeleteInsightUnauthorized {
	return &DeleteInsightUnauthorized{}
}

/* DeleteInsightUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteInsightUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *DeleteInsightUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /insights/{projectOwner}/{projectId}/{id}][%d] deleteInsightUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteInsightUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteInsightUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInsightForbidden creates a DeleteInsightForbidden with default headers values
func NewDeleteInsightForbidden() *DeleteInsightForbidden {
	return &DeleteInsightForbidden{}
}

/* DeleteInsightForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteInsightForbidden struct {
	Payload *models.ErrorMessage
}

func (o *DeleteInsightForbidden) Error() string {
	return fmt.Sprintf("[DELETE /insights/{projectOwner}/{projectId}/{id}][%d] deleteInsightForbidden  %+v", 403, o.Payload)
}
func (o *DeleteInsightForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteInsightForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInsightNotFound creates a DeleteInsightNotFound with default headers values
func NewDeleteInsightNotFound() *DeleteInsightNotFound {
	return &DeleteInsightNotFound{}
}

/* DeleteInsightNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteInsightNotFound struct {
	Payload *models.ErrorMessage
}

func (o *DeleteInsightNotFound) Error() string {
	return fmt.Sprintf("[DELETE /insights/{projectOwner}/{projectId}/{id}][%d] deleteInsightNotFound  %+v", 404, o.Payload)
}
func (o *DeleteInsightNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteInsightNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInsightInternalServerError creates a DeleteInsightInternalServerError with default headers values
func NewDeleteInsightInternalServerError() *DeleteInsightInternalServerError {
	return &DeleteInsightInternalServerError{}
}

/* DeleteInsightInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteInsightInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *DeleteInsightInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /insights/{projectOwner}/{projectId}/{id}][%d] deleteInsightInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteInsightInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteInsightInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
