// Code generated by go-swagger; DO NOT EDIT.

package insights

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetInsightReader is a Reader for the GetInsight structure.
type GetInsightReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInsightReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInsightOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInsightBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInsightUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInsightForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInsightNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInsightInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetInsightOK creates a GetInsightOK with default headers values
func NewGetInsightOK() *GetInsightOK {
	return &GetInsightOK{}
}

/* GetInsightOK describes a response with status code 200, with default header values.

Successfully retrieved insight
*/
type GetInsightOK struct {
	Payload *models.InsightSummaryResponse
}

func (o *GetInsightOK) Error() string {
	return fmt.Sprintf("[GET /insights/{projectOwner}/{projectId}/{id}][%d] getInsightOK  %+v", 200, o.Payload)
}
func (o *GetInsightOK) GetPayload() *models.InsightSummaryResponse {
	return o.Payload
}

func (o *GetInsightOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InsightSummaryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsightBadRequest creates a GetInsightBadRequest with default headers values
func NewGetInsightBadRequest() *GetInsightBadRequest {
	return &GetInsightBadRequest{}
}

/* GetInsightBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetInsightBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetInsightBadRequest) Error() string {
	return fmt.Sprintf("[GET /insights/{projectOwner}/{projectId}/{id}][%d] getInsightBadRequest  %+v", 400, o.Payload)
}
func (o *GetInsightBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetInsightBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsightUnauthorized creates a GetInsightUnauthorized with default headers values
func NewGetInsightUnauthorized() *GetInsightUnauthorized {
	return &GetInsightUnauthorized{}
}

/* GetInsightUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInsightUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetInsightUnauthorized) Error() string {
	return fmt.Sprintf("[GET /insights/{projectOwner}/{projectId}/{id}][%d] getInsightUnauthorized  %+v", 401, o.Payload)
}
func (o *GetInsightUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetInsightUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsightForbidden creates a GetInsightForbidden with default headers values
func NewGetInsightForbidden() *GetInsightForbidden {
	return &GetInsightForbidden{}
}

/* GetInsightForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInsightForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetInsightForbidden) Error() string {
	return fmt.Sprintf("[GET /insights/{projectOwner}/{projectId}/{id}][%d] getInsightForbidden  %+v", 403, o.Payload)
}
func (o *GetInsightForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetInsightForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsightNotFound creates a GetInsightNotFound with default headers values
func NewGetInsightNotFound() *GetInsightNotFound {
	return &GetInsightNotFound{}
}

/* GetInsightNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetInsightNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetInsightNotFound) Error() string {
	return fmt.Sprintf("[GET /insights/{projectOwner}/{projectId}/{id}][%d] getInsightNotFound  %+v", 404, o.Payload)
}
func (o *GetInsightNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetInsightNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsightInternalServerError creates a GetInsightInternalServerError with default headers values
func NewGetInsightInternalServerError() *GetInsightInternalServerError {
	return &GetInsightInternalServerError{}
}

/* GetInsightInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetInsightInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetInsightInternalServerError) Error() string {
	return fmt.Sprintf("[GET /insights/{projectOwner}/{projectId}/{id}][%d] getInsightInternalServerError  %+v", 500, o.Payload)
}
func (o *GetInsightInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetInsightInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
