// Code generated by go-swagger; DO NOT EDIT.

package insights

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// CreateInsightReader is a Reader for the CreateInsight structure.
type CreateInsightReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateInsightReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateInsightOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateInsightBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateInsightUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateInsightForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateInsightNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateInsightUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateInsightInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateInsightOK creates a CreateInsightOK with default headers values
func NewCreateInsightOK() *CreateInsightOK {
	return &CreateInsightOK{}
}

/* CreateInsightOK describes a response with status code 200, with default header values.

Insight created successfully.
*/
type CreateInsightOK struct {
	Payload *models.CreateInsightResponse
}

func (o *CreateInsightOK) Error() string {
	return fmt.Sprintf("[POST /insights/{projectOwner}/{projectId}][%d] createInsightOK  %+v", 200, o.Payload)
}
func (o *CreateInsightOK) GetPayload() *models.CreateInsightResponse {
	return o.Payload
}

func (o *CreateInsightOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateInsightResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsightBadRequest creates a CreateInsightBadRequest with default headers values
func NewCreateInsightBadRequest() *CreateInsightBadRequest {
	return &CreateInsightBadRequest{}
}

/* CreateInsightBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateInsightBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *CreateInsightBadRequest) Error() string {
	return fmt.Sprintf("[POST /insights/{projectOwner}/{projectId}][%d] createInsightBadRequest  %+v", 400, o.Payload)
}
func (o *CreateInsightBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateInsightBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsightUnauthorized creates a CreateInsightUnauthorized with default headers values
func NewCreateInsightUnauthorized() *CreateInsightUnauthorized {
	return &CreateInsightUnauthorized{}
}

/* CreateInsightUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateInsightUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *CreateInsightUnauthorized) Error() string {
	return fmt.Sprintf("[POST /insights/{projectOwner}/{projectId}][%d] createInsightUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateInsightUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateInsightUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsightForbidden creates a CreateInsightForbidden with default headers values
func NewCreateInsightForbidden() *CreateInsightForbidden {
	return &CreateInsightForbidden{}
}

/* CreateInsightForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateInsightForbidden struct {
	Payload *models.ErrorMessage
}

func (o *CreateInsightForbidden) Error() string {
	return fmt.Sprintf("[POST /insights/{projectOwner}/{projectId}][%d] createInsightForbidden  %+v", 403, o.Payload)
}
func (o *CreateInsightForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateInsightForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsightNotFound creates a CreateInsightNotFound with default headers values
func NewCreateInsightNotFound() *CreateInsightNotFound {
	return &CreateInsightNotFound{}
}

/* CreateInsightNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateInsightNotFound struct {
	Payload *models.ErrorMessage
}

func (o *CreateInsightNotFound) Error() string {
	return fmt.Sprintf("[POST /insights/{projectOwner}/{projectId}][%d] createInsightNotFound  %+v", 404, o.Payload)
}
func (o *CreateInsightNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateInsightNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsightUnprocessableEntity creates a CreateInsightUnprocessableEntity with default headers values
func NewCreateInsightUnprocessableEntity() *CreateInsightUnprocessableEntity {
	return &CreateInsightUnprocessableEntity{}
}

/* CreateInsightUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type CreateInsightUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *CreateInsightUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /insights/{projectOwner}/{projectId}][%d] createInsightUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *CreateInsightUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateInsightUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsightInternalServerError creates a CreateInsightInternalServerError with default headers values
func NewCreateInsightInternalServerError() *CreateInsightInternalServerError {
	return &CreateInsightInternalServerError{}
}

/* CreateInsightInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type CreateInsightInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *CreateInsightInternalServerError) Error() string {
	return fmt.Sprintf("[POST /insights/{projectOwner}/{projectId}][%d] createInsightInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateInsightInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateInsightInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
