// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetProjectByVersionReader is a Reader for the GetProjectByVersion structure.
type GetProjectByVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectByVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectByVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProjectByVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetProjectByVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetProjectByVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProjectByVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetProjectByVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProjectByVersionOK creates a GetProjectByVersionOK with default headers values
func NewGetProjectByVersionOK() *GetProjectByVersionOK {
	return &GetProjectByVersionOK{}
}

/* GetProjectByVersionOK describes a response with status code 200, with default header values.

Successfully retrieved project by version
*/
type GetProjectByVersionOK struct {
	Payload *models.ProjectSummaryResponse
}

func (o *GetProjectByVersionOK) Error() string {
	return fmt.Sprintf("[GET /projects/{owner}/{id}/v/{versionId}][%d] getProjectByVersionOK  %+v", 200, o.Payload)
}
func (o *GetProjectByVersionOK) GetPayload() *models.ProjectSummaryResponse {
	return o.Payload
}

func (o *GetProjectByVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectSummaryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectByVersionBadRequest creates a GetProjectByVersionBadRequest with default headers values
func NewGetProjectByVersionBadRequest() *GetProjectByVersionBadRequest {
	return &GetProjectByVersionBadRequest{}
}

/* GetProjectByVersionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetProjectByVersionBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetProjectByVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /projects/{owner}/{id}/v/{versionId}][%d] getProjectByVersionBadRequest  %+v", 400, o.Payload)
}
func (o *GetProjectByVersionBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetProjectByVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectByVersionUnauthorized creates a GetProjectByVersionUnauthorized with default headers values
func NewGetProjectByVersionUnauthorized() *GetProjectByVersionUnauthorized {
	return &GetProjectByVersionUnauthorized{}
}

/* GetProjectByVersionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetProjectByVersionUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetProjectByVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projects/{owner}/{id}/v/{versionId}][%d] getProjectByVersionUnauthorized  %+v", 401, o.Payload)
}
func (o *GetProjectByVersionUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetProjectByVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectByVersionForbidden creates a GetProjectByVersionForbidden with default headers values
func NewGetProjectByVersionForbidden() *GetProjectByVersionForbidden {
	return &GetProjectByVersionForbidden{}
}

/* GetProjectByVersionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetProjectByVersionForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetProjectByVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /projects/{owner}/{id}/v/{versionId}][%d] getProjectByVersionForbidden  %+v", 403, o.Payload)
}
func (o *GetProjectByVersionForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetProjectByVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectByVersionNotFound creates a GetProjectByVersionNotFound with default headers values
func NewGetProjectByVersionNotFound() *GetProjectByVersionNotFound {
	return &GetProjectByVersionNotFound{}
}

/* GetProjectByVersionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetProjectByVersionNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetProjectByVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{owner}/{id}/v/{versionId}][%d] getProjectByVersionNotFound  %+v", 404, o.Payload)
}
func (o *GetProjectByVersionNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetProjectByVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectByVersionInternalServerError creates a GetProjectByVersionInternalServerError with default headers values
func NewGetProjectByVersionInternalServerError() *GetProjectByVersionInternalServerError {
	return &GetProjectByVersionInternalServerError{}
}

/* GetProjectByVersionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetProjectByVersionInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetProjectByVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projects/{owner}/{id}/v/{versionId}][%d] getProjectByVersionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetProjectByVersionInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetProjectByVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
