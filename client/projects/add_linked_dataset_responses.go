// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// AddLinkedDatasetReader is a Reader for the AddLinkedDataset structure.
type AddLinkedDatasetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddLinkedDatasetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddLinkedDatasetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddLinkedDatasetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddLinkedDatasetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddLinkedDatasetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddLinkedDatasetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddLinkedDatasetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddLinkedDatasetOK creates a AddLinkedDatasetOK with default headers values
func NewAddLinkedDatasetOK() *AddLinkedDatasetOK {
	return &AddLinkedDatasetOK{}
}

/* AddLinkedDatasetOK describes a response with status code 200, with default header values.

Dataset linked successfully.
*/
type AddLinkedDatasetOK struct {
	Payload *models.SuccessMessage
}

func (o *AddLinkedDatasetOK) Error() string {
	return fmt.Sprintf("[PUT /projects/{owner}/{id}/linkedDatasets/{linkedDatasetOwner}/{linkedDatasetId}][%d] addLinkedDatasetOK  %+v", 200, o.Payload)
}
func (o *AddLinkedDatasetOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *AddLinkedDatasetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddLinkedDatasetBadRequest creates a AddLinkedDatasetBadRequest with default headers values
func NewAddLinkedDatasetBadRequest() *AddLinkedDatasetBadRequest {
	return &AddLinkedDatasetBadRequest{}
}

/* AddLinkedDatasetBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AddLinkedDatasetBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *AddLinkedDatasetBadRequest) Error() string {
	return fmt.Sprintf("[PUT /projects/{owner}/{id}/linkedDatasets/{linkedDatasetOwner}/{linkedDatasetId}][%d] addLinkedDatasetBadRequest  %+v", 400, o.Payload)
}
func (o *AddLinkedDatasetBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AddLinkedDatasetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddLinkedDatasetUnauthorized creates a AddLinkedDatasetUnauthorized with default headers values
func NewAddLinkedDatasetUnauthorized() *AddLinkedDatasetUnauthorized {
	return &AddLinkedDatasetUnauthorized{}
}

/* AddLinkedDatasetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddLinkedDatasetUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *AddLinkedDatasetUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /projects/{owner}/{id}/linkedDatasets/{linkedDatasetOwner}/{linkedDatasetId}][%d] addLinkedDatasetUnauthorized  %+v", 401, o.Payload)
}
func (o *AddLinkedDatasetUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AddLinkedDatasetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddLinkedDatasetForbidden creates a AddLinkedDatasetForbidden with default headers values
func NewAddLinkedDatasetForbidden() *AddLinkedDatasetForbidden {
	return &AddLinkedDatasetForbidden{}
}

/* AddLinkedDatasetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddLinkedDatasetForbidden struct {
	Payload *models.ErrorMessage
}

func (o *AddLinkedDatasetForbidden) Error() string {
	return fmt.Sprintf("[PUT /projects/{owner}/{id}/linkedDatasets/{linkedDatasetOwner}/{linkedDatasetId}][%d] addLinkedDatasetForbidden  %+v", 403, o.Payload)
}
func (o *AddLinkedDatasetForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AddLinkedDatasetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddLinkedDatasetNotFound creates a AddLinkedDatasetNotFound with default headers values
func NewAddLinkedDatasetNotFound() *AddLinkedDatasetNotFound {
	return &AddLinkedDatasetNotFound{}
}

/* AddLinkedDatasetNotFound describes a response with status code 404, with default header values.

Not found
*/
type AddLinkedDatasetNotFound struct {
	Payload *models.ErrorMessage
}

func (o *AddLinkedDatasetNotFound) Error() string {
	return fmt.Sprintf("[PUT /projects/{owner}/{id}/linkedDatasets/{linkedDatasetOwner}/{linkedDatasetId}][%d] addLinkedDatasetNotFound  %+v", 404, o.Payload)
}
func (o *AddLinkedDatasetNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AddLinkedDatasetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddLinkedDatasetInternalServerError creates a AddLinkedDatasetInternalServerError with default headers values
func NewAddLinkedDatasetInternalServerError() *AddLinkedDatasetInternalServerError {
	return &AddLinkedDatasetInternalServerError{}
}

/* AddLinkedDatasetInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type AddLinkedDatasetInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *AddLinkedDatasetInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /projects/{owner}/{id}/linkedDatasets/{linkedDatasetOwner}/{linkedDatasetId}][%d] addLinkedDatasetInternalServerError  %+v", 500, o.Payload)
}
func (o *AddLinkedDatasetInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AddLinkedDatasetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
