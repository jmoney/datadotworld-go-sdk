// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// CreateProjectReader is a Reader for the CreateProject structure.
type CreateProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateProjectUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateProjectOK creates a CreateProjectOK with default headers values
func NewCreateProjectOK() *CreateProjectOK {
	return &CreateProjectOK{}
}

/* CreateProjectOK describes a response with status code 200, with default header values.

Project created successfully.
*/
type CreateProjectOK struct {
	Payload *models.CreateProjectResponse
}

func (o *CreateProjectOK) Error() string {
	return fmt.Sprintf("[POST /projects/{owner}][%d] createProjectOK  %+v", 200, o.Payload)
}
func (o *CreateProjectOK) GetPayload() *models.CreateProjectResponse {
	return o.Payload
}

func (o *CreateProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateProjectResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectBadRequest creates a CreateProjectBadRequest with default headers values
func NewCreateProjectBadRequest() *CreateProjectBadRequest {
	return &CreateProjectBadRequest{}
}

/* CreateProjectBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateProjectBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *CreateProjectBadRequest) Error() string {
	return fmt.Sprintf("[POST /projects/{owner}][%d] createProjectBadRequest  %+v", 400, o.Payload)
}
func (o *CreateProjectBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectUnauthorized creates a CreateProjectUnauthorized with default headers values
func NewCreateProjectUnauthorized() *CreateProjectUnauthorized {
	return &CreateProjectUnauthorized{}
}

/* CreateProjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateProjectUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *CreateProjectUnauthorized) Error() string {
	return fmt.Sprintf("[POST /projects/{owner}][%d] createProjectUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateProjectUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectForbidden creates a CreateProjectForbidden with default headers values
func NewCreateProjectForbidden() *CreateProjectForbidden {
	return &CreateProjectForbidden{}
}

/* CreateProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateProjectForbidden struct {
	Payload *models.ErrorMessage
}

func (o *CreateProjectForbidden) Error() string {
	return fmt.Sprintf("[POST /projects/{owner}][%d] createProjectForbidden  %+v", 403, o.Payload)
}
func (o *CreateProjectForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectNotFound creates a CreateProjectNotFound with default headers values
func NewCreateProjectNotFound() *CreateProjectNotFound {
	return &CreateProjectNotFound{}
}

/* CreateProjectNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateProjectNotFound struct {
	Payload *models.ErrorMessage
}

func (o *CreateProjectNotFound) Error() string {
	return fmt.Sprintf("[POST /projects/{owner}][%d] createProjectNotFound  %+v", 404, o.Payload)
}
func (o *CreateProjectNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectUnprocessableEntity creates a CreateProjectUnprocessableEntity with default headers values
func NewCreateProjectUnprocessableEntity() *CreateProjectUnprocessableEntity {
	return &CreateProjectUnprocessableEntity{}
}

/* CreateProjectUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type CreateProjectUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *CreateProjectUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /projects/{owner}][%d] createProjectUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *CreateProjectUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateProjectUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectInternalServerError creates a CreateProjectInternalServerError with default headers values
func NewCreateProjectInternalServerError() *CreateProjectInternalServerError {
	return &CreateProjectInternalServerError{}
}

/* CreateProjectInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type CreateProjectInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *CreateProjectInternalServerError) Error() string {
	return fmt.Sprintf("[POST /projects/{owner}][%d] createProjectInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateProjectInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
