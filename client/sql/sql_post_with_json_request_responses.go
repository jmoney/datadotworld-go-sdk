// Code generated by go-swagger; DO NOT EDIT.

package sql

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// SQLPostWithJSONRequestReader is a Reader for the SQLPostWithJSONRequest structure.
type SQLPostWithJSONRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SQLPostWithJSONRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSQLPostWithJSONRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSQLPostWithJSONRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSQLPostWithJSONRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSQLPostWithJSONRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSQLPostWithJSONRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSQLPostWithJSONRequestUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSQLPostWithJSONRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSQLPostWithJSONRequestOK creates a SQLPostWithJSONRequestOK with default headers values
func NewSQLPostWithJSONRequestOK() *SQLPostWithJSONRequestOK {
	return &SQLPostWithJSONRequestOK{}
}

/* SQLPostWithJSONRequestOK describes a response with status code 200, with default header values.

The request has succeeded.
*/
type SQLPostWithJSONRequestOK struct {
}

func (o *SQLPostWithJSONRequestOK) Error() string {
	return fmt.Sprintf("[POST /sql/{owner}/{id}][%d] sqlPostWithJsonRequestOK ", 200)
}

func (o *SQLPostWithJSONRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSQLPostWithJSONRequestBadRequest creates a SQLPostWithJSONRequestBadRequest with default headers values
func NewSQLPostWithJSONRequestBadRequest() *SQLPostWithJSONRequestBadRequest {
	return &SQLPostWithJSONRequestBadRequest{}
}

/* SQLPostWithJSONRequestBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SQLPostWithJSONRequestBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *SQLPostWithJSONRequestBadRequest) Error() string {
	return fmt.Sprintf("[POST /sql/{owner}/{id}][%d] sqlPostWithJsonRequestBadRequest  %+v", 400, o.Payload)
}
func (o *SQLPostWithJSONRequestBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SQLPostWithJSONRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSQLPostWithJSONRequestUnauthorized creates a SQLPostWithJSONRequestUnauthorized with default headers values
func NewSQLPostWithJSONRequestUnauthorized() *SQLPostWithJSONRequestUnauthorized {
	return &SQLPostWithJSONRequestUnauthorized{}
}

/* SQLPostWithJSONRequestUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SQLPostWithJSONRequestUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *SQLPostWithJSONRequestUnauthorized) Error() string {
	return fmt.Sprintf("[POST /sql/{owner}/{id}][%d] sqlPostWithJsonRequestUnauthorized  %+v", 401, o.Payload)
}
func (o *SQLPostWithJSONRequestUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SQLPostWithJSONRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSQLPostWithJSONRequestForbidden creates a SQLPostWithJSONRequestForbidden with default headers values
func NewSQLPostWithJSONRequestForbidden() *SQLPostWithJSONRequestForbidden {
	return &SQLPostWithJSONRequestForbidden{}
}

/* SQLPostWithJSONRequestForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SQLPostWithJSONRequestForbidden struct {
	Payload *models.ErrorMessage
}

func (o *SQLPostWithJSONRequestForbidden) Error() string {
	return fmt.Sprintf("[POST /sql/{owner}/{id}][%d] sqlPostWithJsonRequestForbidden  %+v", 403, o.Payload)
}
func (o *SQLPostWithJSONRequestForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SQLPostWithJSONRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSQLPostWithJSONRequestNotFound creates a SQLPostWithJSONRequestNotFound with default headers values
func NewSQLPostWithJSONRequestNotFound() *SQLPostWithJSONRequestNotFound {
	return &SQLPostWithJSONRequestNotFound{}
}

/* SQLPostWithJSONRequestNotFound describes a response with status code 404, with default header values.

Not found
*/
type SQLPostWithJSONRequestNotFound struct {
	Payload *models.ErrorMessage
}

func (o *SQLPostWithJSONRequestNotFound) Error() string {
	return fmt.Sprintf("[POST /sql/{owner}/{id}][%d] sqlPostWithJsonRequestNotFound  %+v", 404, o.Payload)
}
func (o *SQLPostWithJSONRequestNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SQLPostWithJSONRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSQLPostWithJSONRequestUnprocessableEntity creates a SQLPostWithJSONRequestUnprocessableEntity with default headers values
func NewSQLPostWithJSONRequestUnprocessableEntity() *SQLPostWithJSONRequestUnprocessableEntity {
	return &SQLPostWithJSONRequestUnprocessableEntity{}
}

/* SQLPostWithJSONRequestUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type SQLPostWithJSONRequestUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *SQLPostWithJSONRequestUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /sql/{owner}/{id}][%d] sqlPostWithJsonRequestUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *SQLPostWithJSONRequestUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SQLPostWithJSONRequestUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSQLPostWithJSONRequestInternalServerError creates a SQLPostWithJSONRequestInternalServerError with default headers values
func NewSQLPostWithJSONRequestInternalServerError() *SQLPostWithJSONRequestInternalServerError {
	return &SQLPostWithJSONRequestInternalServerError{}
}

/* SQLPostWithJSONRequestInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type SQLPostWithJSONRequestInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *SQLPostWithJSONRequestInternalServerError) Error() string {
	return fmt.Sprintf("[POST /sql/{owner}/{id}][%d] sqlPostWithJsonRequestInternalServerError  %+v", 500, o.Payload)
}
func (o *SQLPostWithJSONRequestInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SQLPostWithJSONRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
