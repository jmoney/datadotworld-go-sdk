// Code generated by go-swagger; DO NOT EDIT.

package queries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetQueryVersionReader is a Reader for the GetQueryVersion structure.
type GetQueryVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQueryVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetQueryVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetQueryVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetQueryVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetQueryVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetQueryVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetQueryVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetQueryVersionOK creates a GetQueryVersionOK with default headers values
func NewGetQueryVersionOK() *GetQueryVersionOK {
	return &GetQueryVersionOK{}
}

/* GetQueryVersionOK describes a response with status code 200, with default header values.

Successfully retrieved a version query definition.
*/
type GetQueryVersionOK struct {
	Payload *models.QuerySummaryResponse
}

func (o *GetQueryVersionOK) Error() string {
	return fmt.Sprintf("[GET /queries/{id}/v/{versionId}][%d] getQueryVersionOK  %+v", 200, o.Payload)
}
func (o *GetQueryVersionOK) GetPayload() *models.QuerySummaryResponse {
	return o.Payload
}

func (o *GetQueryVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QuerySummaryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQueryVersionBadRequest creates a GetQueryVersionBadRequest with default headers values
func NewGetQueryVersionBadRequest() *GetQueryVersionBadRequest {
	return &GetQueryVersionBadRequest{}
}

/* GetQueryVersionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetQueryVersionBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetQueryVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /queries/{id}/v/{versionId}][%d] getQueryVersionBadRequest  %+v", 400, o.Payload)
}
func (o *GetQueryVersionBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetQueryVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQueryVersionUnauthorized creates a GetQueryVersionUnauthorized with default headers values
func NewGetQueryVersionUnauthorized() *GetQueryVersionUnauthorized {
	return &GetQueryVersionUnauthorized{}
}

/* GetQueryVersionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetQueryVersionUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetQueryVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /queries/{id}/v/{versionId}][%d] getQueryVersionUnauthorized  %+v", 401, o.Payload)
}
func (o *GetQueryVersionUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetQueryVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQueryVersionForbidden creates a GetQueryVersionForbidden with default headers values
func NewGetQueryVersionForbidden() *GetQueryVersionForbidden {
	return &GetQueryVersionForbidden{}
}

/* GetQueryVersionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetQueryVersionForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetQueryVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /queries/{id}/v/{versionId}][%d] getQueryVersionForbidden  %+v", 403, o.Payload)
}
func (o *GetQueryVersionForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetQueryVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQueryVersionNotFound creates a GetQueryVersionNotFound with default headers values
func NewGetQueryVersionNotFound() *GetQueryVersionNotFound {
	return &GetQueryVersionNotFound{}
}

/* GetQueryVersionNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetQueryVersionNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetQueryVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /queries/{id}/v/{versionId}][%d] getQueryVersionNotFound  %+v", 404, o.Payload)
}
func (o *GetQueryVersionNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetQueryVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQueryVersionInternalServerError creates a GetQueryVersionInternalServerError with default headers values
func NewGetQueryVersionInternalServerError() *GetQueryVersionInternalServerError {
	return &GetQueryVersionInternalServerError{}
}

/* GetQueryVersionInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetQueryVersionInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetQueryVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /queries/{id}/v/{versionId}][%d] getQueryVersionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetQueryVersionInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetQueryVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
