// Code generated by go-swagger; DO NOT EDIT.

package queries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetQueryReader is a Reader for the GetQuery structure.
type GetQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetQueryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetQueryOK creates a GetQueryOK with default headers values
func NewGetQueryOK() *GetQueryOK {
	return &GetQueryOK{}
}

/* GetQueryOK describes a response with status code 200, with default header values.

Successfully retrieved a query definition.
*/
type GetQueryOK struct {
	Payload *models.QuerySummaryResponse
}

func (o *GetQueryOK) Error() string {
	return fmt.Sprintf("[GET /queries/{id}][%d] getQueryOK  %+v", 200, o.Payload)
}
func (o *GetQueryOK) GetPayload() *models.QuerySummaryResponse {
	return o.Payload
}

func (o *GetQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QuerySummaryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQueryBadRequest creates a GetQueryBadRequest with default headers values
func NewGetQueryBadRequest() *GetQueryBadRequest {
	return &GetQueryBadRequest{}
}

/* GetQueryBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetQueryBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetQueryBadRequest) Error() string {
	return fmt.Sprintf("[GET /queries/{id}][%d] getQueryBadRequest  %+v", 400, o.Payload)
}
func (o *GetQueryBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQueryUnauthorized creates a GetQueryUnauthorized with default headers values
func NewGetQueryUnauthorized() *GetQueryUnauthorized {
	return &GetQueryUnauthorized{}
}

/* GetQueryUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetQueryUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetQueryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /queries/{id}][%d] getQueryUnauthorized  %+v", 401, o.Payload)
}
func (o *GetQueryUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQueryForbidden creates a GetQueryForbidden with default headers values
func NewGetQueryForbidden() *GetQueryForbidden {
	return &GetQueryForbidden{}
}

/* GetQueryForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetQueryForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetQueryForbidden) Error() string {
	return fmt.Sprintf("[GET /queries/{id}][%d] getQueryForbidden  %+v", 403, o.Payload)
}
func (o *GetQueryForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetQueryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQueryNotFound creates a GetQueryNotFound with default headers values
func NewGetQueryNotFound() *GetQueryNotFound {
	return &GetQueryNotFound{}
}

/* GetQueryNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetQueryNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetQueryNotFound) Error() string {
	return fmt.Sprintf("[GET /queries/{id}][%d] getQueryNotFound  %+v", 404, o.Payload)
}
func (o *GetQueryNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQueryInternalServerError creates a GetQueryInternalServerError with default headers values
func NewGetQueryInternalServerError() *GetQueryInternalServerError {
	return &GetQueryInternalServerError{}
}

/* GetQueryInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetQueryInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetQueryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /queries/{id}][%d] getQueryInternalServerError  %+v", 500, o.Payload)
}
func (o *GetQueryInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
