// Code generated by go-swagger; DO NOT EDIT.

package queries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// ExecuteQueryReader is a Reader for the ExecuteQuery structure.
type ExecuteQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExecuteQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExecuteQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExecuteQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewExecuteQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExecuteQueryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExecuteQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExecuteQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewExecuteQueryOK creates a ExecuteQueryOK with default headers values
func NewExecuteQueryOK() *ExecuteQueryOK {
	return &ExecuteQueryOK{}
}

/* ExecuteQueryOK describes a response with status code 200, with default header values.

Successfully executed a query.
*/
type ExecuteQueryOK struct {
	Payload *models.SuccessMessage
}

func (o *ExecuteQueryOK) Error() string {
	return fmt.Sprintf("[GET /queries/{id}/results][%d] executeQueryOK  %+v", 200, o.Payload)
}
func (o *ExecuteQueryOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *ExecuteQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExecuteQueryBadRequest creates a ExecuteQueryBadRequest with default headers values
func NewExecuteQueryBadRequest() *ExecuteQueryBadRequest {
	return &ExecuteQueryBadRequest{}
}

/* ExecuteQueryBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ExecuteQueryBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *ExecuteQueryBadRequest) Error() string {
	return fmt.Sprintf("[GET /queries/{id}/results][%d] executeQueryBadRequest  %+v", 400, o.Payload)
}
func (o *ExecuteQueryBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ExecuteQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExecuteQueryUnauthorized creates a ExecuteQueryUnauthorized with default headers values
func NewExecuteQueryUnauthorized() *ExecuteQueryUnauthorized {
	return &ExecuteQueryUnauthorized{}
}

/* ExecuteQueryUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ExecuteQueryUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *ExecuteQueryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /queries/{id}/results][%d] executeQueryUnauthorized  %+v", 401, o.Payload)
}
func (o *ExecuteQueryUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ExecuteQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExecuteQueryForbidden creates a ExecuteQueryForbidden with default headers values
func NewExecuteQueryForbidden() *ExecuteQueryForbidden {
	return &ExecuteQueryForbidden{}
}

/* ExecuteQueryForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ExecuteQueryForbidden struct {
	Payload *models.ErrorMessage
}

func (o *ExecuteQueryForbidden) Error() string {
	return fmt.Sprintf("[GET /queries/{id}/results][%d] executeQueryForbidden  %+v", 403, o.Payload)
}
func (o *ExecuteQueryForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ExecuteQueryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExecuteQueryNotFound creates a ExecuteQueryNotFound with default headers values
func NewExecuteQueryNotFound() *ExecuteQueryNotFound {
	return &ExecuteQueryNotFound{}
}

/* ExecuteQueryNotFound describes a response with status code 404, with default header values.

Not found
*/
type ExecuteQueryNotFound struct {
	Payload *models.ErrorMessage
}

func (o *ExecuteQueryNotFound) Error() string {
	return fmt.Sprintf("[GET /queries/{id}/results][%d] executeQueryNotFound  %+v", 404, o.Payload)
}
func (o *ExecuteQueryNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ExecuteQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExecuteQueryInternalServerError creates a ExecuteQueryInternalServerError with default headers values
func NewExecuteQueryInternalServerError() *ExecuteQueryInternalServerError {
	return &ExecuteQueryInternalServerError{}
}

/* ExecuteQueryInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type ExecuteQueryInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *ExecuteQueryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /queries/{id}/results][%d] executeQueryInternalServerError  %+v", 500, o.Payload)
}
func (o *ExecuteQueryInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ExecuteQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
