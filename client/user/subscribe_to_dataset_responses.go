// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// SubscribeToDatasetReader is a Reader for the SubscribeToDataset structure.
type SubscribeToDatasetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubscribeToDatasetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSubscribeToDatasetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSubscribeToDatasetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSubscribeToDatasetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSubscribeToDatasetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSubscribeToDatasetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSubscribeToDatasetUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSubscribeToDatasetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSubscribeToDatasetOK creates a SubscribeToDatasetOK with default headers values
func NewSubscribeToDatasetOK() *SubscribeToDatasetOK {
	return &SubscribeToDatasetOK{}
}

/* SubscribeToDatasetOK describes a response with status code 200, with default header values.

Webhook subscription created successfully.
*/
type SubscribeToDatasetOK struct {
	Payload *models.SuccessMessage
}

func (o *SubscribeToDatasetOK) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/datasets/{owner}/{id}][%d] subscribeToDatasetOK  %+v", 200, o.Payload)
}
func (o *SubscribeToDatasetOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *SubscribeToDatasetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeToDatasetBadRequest creates a SubscribeToDatasetBadRequest with default headers values
func NewSubscribeToDatasetBadRequest() *SubscribeToDatasetBadRequest {
	return &SubscribeToDatasetBadRequest{}
}

/* SubscribeToDatasetBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SubscribeToDatasetBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *SubscribeToDatasetBadRequest) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/datasets/{owner}/{id}][%d] subscribeToDatasetBadRequest  %+v", 400, o.Payload)
}
func (o *SubscribeToDatasetBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SubscribeToDatasetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeToDatasetUnauthorized creates a SubscribeToDatasetUnauthorized with default headers values
func NewSubscribeToDatasetUnauthorized() *SubscribeToDatasetUnauthorized {
	return &SubscribeToDatasetUnauthorized{}
}

/* SubscribeToDatasetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SubscribeToDatasetUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *SubscribeToDatasetUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/datasets/{owner}/{id}][%d] subscribeToDatasetUnauthorized  %+v", 401, o.Payload)
}
func (o *SubscribeToDatasetUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SubscribeToDatasetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeToDatasetForbidden creates a SubscribeToDatasetForbidden with default headers values
func NewSubscribeToDatasetForbidden() *SubscribeToDatasetForbidden {
	return &SubscribeToDatasetForbidden{}
}

/* SubscribeToDatasetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SubscribeToDatasetForbidden struct {
	Payload *models.ErrorMessage
}

func (o *SubscribeToDatasetForbidden) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/datasets/{owner}/{id}][%d] subscribeToDatasetForbidden  %+v", 403, o.Payload)
}
func (o *SubscribeToDatasetForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SubscribeToDatasetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeToDatasetNotFound creates a SubscribeToDatasetNotFound with default headers values
func NewSubscribeToDatasetNotFound() *SubscribeToDatasetNotFound {
	return &SubscribeToDatasetNotFound{}
}

/* SubscribeToDatasetNotFound describes a response with status code 404, with default header values.

Not found
*/
type SubscribeToDatasetNotFound struct {
	Payload *models.ErrorMessage
}

func (o *SubscribeToDatasetNotFound) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/datasets/{owner}/{id}][%d] subscribeToDatasetNotFound  %+v", 404, o.Payload)
}
func (o *SubscribeToDatasetNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SubscribeToDatasetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeToDatasetUnprocessableEntity creates a SubscribeToDatasetUnprocessableEntity with default headers values
func NewSubscribeToDatasetUnprocessableEntity() *SubscribeToDatasetUnprocessableEntity {
	return &SubscribeToDatasetUnprocessableEntity{}
}

/* SubscribeToDatasetUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type SubscribeToDatasetUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *SubscribeToDatasetUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/datasets/{owner}/{id}][%d] subscribeToDatasetUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *SubscribeToDatasetUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SubscribeToDatasetUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeToDatasetInternalServerError creates a SubscribeToDatasetInternalServerError with default headers values
func NewSubscribeToDatasetInternalServerError() *SubscribeToDatasetInternalServerError {
	return &SubscribeToDatasetInternalServerError{}
}

/* SubscribeToDatasetInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type SubscribeToDatasetInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *SubscribeToDatasetInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/datasets/{owner}/{id}][%d] subscribeToDatasetInternalServerError  %+v", 500, o.Payload)
}
func (o *SubscribeToDatasetInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SubscribeToDatasetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
