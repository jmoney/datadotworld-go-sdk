// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// UnsubscribeFromUserReader is a Reader for the UnsubscribeFromUser structure.
type UnsubscribeFromUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnsubscribeFromUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnsubscribeFromUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUnsubscribeFromUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUnsubscribeFromUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUnsubscribeFromUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUnsubscribeFromUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUnsubscribeFromUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUnsubscribeFromUserOK creates a UnsubscribeFromUserOK with default headers values
func NewUnsubscribeFromUserOK() *UnsubscribeFromUserOK {
	return &UnsubscribeFromUserOK{}
}

/* UnsubscribeFromUserOK describes a response with status code 200, with default header values.

Webhook subscription deleted successfully.
*/
type UnsubscribeFromUserOK struct {
	Payload *models.SuccessMessage
}

func (o *UnsubscribeFromUserOK) Error() string {
	return fmt.Sprintf("[DELETE /user/webhooks/users/{account}][%d] unsubscribeFromUserOK  %+v", 200, o.Payload)
}
func (o *UnsubscribeFromUserOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *UnsubscribeFromUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnsubscribeFromUserBadRequest creates a UnsubscribeFromUserBadRequest with default headers values
func NewUnsubscribeFromUserBadRequest() *UnsubscribeFromUserBadRequest {
	return &UnsubscribeFromUserBadRequest{}
}

/* UnsubscribeFromUserBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UnsubscribeFromUserBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *UnsubscribeFromUserBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /user/webhooks/users/{account}][%d] unsubscribeFromUserBadRequest  %+v", 400, o.Payload)
}
func (o *UnsubscribeFromUserBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UnsubscribeFromUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnsubscribeFromUserUnauthorized creates a UnsubscribeFromUserUnauthorized with default headers values
func NewUnsubscribeFromUserUnauthorized() *UnsubscribeFromUserUnauthorized {
	return &UnsubscribeFromUserUnauthorized{}
}

/* UnsubscribeFromUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UnsubscribeFromUserUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *UnsubscribeFromUserUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /user/webhooks/users/{account}][%d] unsubscribeFromUserUnauthorized  %+v", 401, o.Payload)
}
func (o *UnsubscribeFromUserUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UnsubscribeFromUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnsubscribeFromUserForbidden creates a UnsubscribeFromUserForbidden with default headers values
func NewUnsubscribeFromUserForbidden() *UnsubscribeFromUserForbidden {
	return &UnsubscribeFromUserForbidden{}
}

/* UnsubscribeFromUserForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UnsubscribeFromUserForbidden struct {
	Payload *models.ErrorMessage
}

func (o *UnsubscribeFromUserForbidden) Error() string {
	return fmt.Sprintf("[DELETE /user/webhooks/users/{account}][%d] unsubscribeFromUserForbidden  %+v", 403, o.Payload)
}
func (o *UnsubscribeFromUserForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UnsubscribeFromUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnsubscribeFromUserNotFound creates a UnsubscribeFromUserNotFound with default headers values
func NewUnsubscribeFromUserNotFound() *UnsubscribeFromUserNotFound {
	return &UnsubscribeFromUserNotFound{}
}

/* UnsubscribeFromUserNotFound describes a response with status code 404, with default header values.

Not found
*/
type UnsubscribeFromUserNotFound struct {
	Payload *models.ErrorMessage
}

func (o *UnsubscribeFromUserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /user/webhooks/users/{account}][%d] unsubscribeFromUserNotFound  %+v", 404, o.Payload)
}
func (o *UnsubscribeFromUserNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UnsubscribeFromUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnsubscribeFromUserInternalServerError creates a UnsubscribeFromUserInternalServerError with default headers values
func NewUnsubscribeFromUserInternalServerError() *UnsubscribeFromUserInternalServerError {
	return &UnsubscribeFromUserInternalServerError{}
}

/* UnsubscribeFromUserInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UnsubscribeFromUserInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *UnsubscribeFromUserInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /user/webhooks/users/{account}][%d] unsubscribeFromUserInternalServerError  %+v", 500, o.Payload)
}
func (o *UnsubscribeFromUserInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UnsubscribeFromUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
