// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetForUserReader is a Reader for the GetForUser structure.
type GetForUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetForUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetForUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetForUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetForUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetForUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetForUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetForUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetForUserOK creates a GetForUserOK with default headers values
func NewGetForUserOK() *GetForUserOK {
	return &GetForUserOK{}
}

/* GetForUserOK describes a response with status code 200, with default header values.

Webhook subscription retrieved successfully.
*/
type GetForUserOK struct {
	Payload *models.Subscription
}

func (o *GetForUserOK) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/users/{account}][%d] getForUserOK  %+v", 200, o.Payload)
}
func (o *GetForUserOK) GetPayload() *models.Subscription {
	return o.Payload
}

func (o *GetForUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Subscription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForUserBadRequest creates a GetForUserBadRequest with default headers values
func NewGetForUserBadRequest() *GetForUserBadRequest {
	return &GetForUserBadRequest{}
}

/* GetForUserBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetForUserBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetForUserBadRequest) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/users/{account}][%d] getForUserBadRequest  %+v", 400, o.Payload)
}
func (o *GetForUserBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForUserUnauthorized creates a GetForUserUnauthorized with default headers values
func NewGetForUserUnauthorized() *GetForUserUnauthorized {
	return &GetForUserUnauthorized{}
}

/* GetForUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetForUserUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetForUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/users/{account}][%d] getForUserUnauthorized  %+v", 401, o.Payload)
}
func (o *GetForUserUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForUserForbidden creates a GetForUserForbidden with default headers values
func NewGetForUserForbidden() *GetForUserForbidden {
	return &GetForUserForbidden{}
}

/* GetForUserForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetForUserForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetForUserForbidden) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/users/{account}][%d] getForUserForbidden  %+v", 403, o.Payload)
}
func (o *GetForUserForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForUserNotFound creates a GetForUserNotFound with default headers values
func NewGetForUserNotFound() *GetForUserNotFound {
	return &GetForUserNotFound{}
}

/* GetForUserNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetForUserNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetForUserNotFound) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/users/{account}][%d] getForUserNotFound  %+v", 404, o.Payload)
}
func (o *GetForUserNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForUserInternalServerError creates a GetForUserInternalServerError with default headers values
func NewGetForUserInternalServerError() *GetForUserInternalServerError {
	return &GetForUserInternalServerError{}
}

/* GetForUserInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetForUserInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetForUserInternalServerError) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/users/{account}][%d] getForUserInternalServerError  %+v", 500, o.Payload)
}
func (o *GetForUserInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
