// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetForProjectReader is a Reader for the GetForProject structure.
type GetForProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetForProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetForProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetForProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetForProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetForProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetForProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetForProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetForProjectOK creates a GetForProjectOK with default headers values
func NewGetForProjectOK() *GetForProjectOK {
	return &GetForProjectOK{}
}

/* GetForProjectOK describes a response with status code 200, with default header values.

Webhook subscription retrieved successfully.
*/
type GetForProjectOK struct {
	Payload *models.Subscription
}

func (o *GetForProjectOK) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/projects/{owner}/{id}][%d] getForProjectOK  %+v", 200, o.Payload)
}
func (o *GetForProjectOK) GetPayload() *models.Subscription {
	return o.Payload
}

func (o *GetForProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Subscription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForProjectBadRequest creates a GetForProjectBadRequest with default headers values
func NewGetForProjectBadRequest() *GetForProjectBadRequest {
	return &GetForProjectBadRequest{}
}

/* GetForProjectBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetForProjectBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetForProjectBadRequest) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/projects/{owner}/{id}][%d] getForProjectBadRequest  %+v", 400, o.Payload)
}
func (o *GetForProjectBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForProjectUnauthorized creates a GetForProjectUnauthorized with default headers values
func NewGetForProjectUnauthorized() *GetForProjectUnauthorized {
	return &GetForProjectUnauthorized{}
}

/* GetForProjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetForProjectUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetForProjectUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/projects/{owner}/{id}][%d] getForProjectUnauthorized  %+v", 401, o.Payload)
}
func (o *GetForProjectUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForProjectForbidden creates a GetForProjectForbidden with default headers values
func NewGetForProjectForbidden() *GetForProjectForbidden {
	return &GetForProjectForbidden{}
}

/* GetForProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetForProjectForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetForProjectForbidden) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/projects/{owner}/{id}][%d] getForProjectForbidden  %+v", 403, o.Payload)
}
func (o *GetForProjectForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForProjectNotFound creates a GetForProjectNotFound with default headers values
func NewGetForProjectNotFound() *GetForProjectNotFound {
	return &GetForProjectNotFound{}
}

/* GetForProjectNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetForProjectNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetForProjectNotFound) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/projects/{owner}/{id}][%d] getForProjectNotFound  %+v", 404, o.Payload)
}
func (o *GetForProjectNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForProjectInternalServerError creates a GetForProjectInternalServerError with default headers values
func NewGetForProjectInternalServerError() *GetForProjectInternalServerError {
	return &GetForProjectInternalServerError{}
}

/* GetForProjectInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetForProjectInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetForProjectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/projects/{owner}/{id}][%d] getForProjectInternalServerError  %+v", 500, o.Payload)
}
func (o *GetForProjectInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
