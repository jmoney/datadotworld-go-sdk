// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// FetchContributingProjectsReader is a Reader for the FetchContributingProjects structure.
type FetchContributingProjectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FetchContributingProjectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFetchContributingProjectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFetchContributingProjectsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFetchContributingProjectsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFetchContributingProjectsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFetchContributingProjectsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFetchContributingProjectsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFetchContributingProjectsOK creates a FetchContributingProjectsOK with default headers values
func NewFetchContributingProjectsOK() *FetchContributingProjectsOK {
	return &FetchContributingProjectsOK{}
}

/* FetchContributingProjectsOK describes a response with status code 200, with default header values.

successful operation
*/
type FetchContributingProjectsOK struct {
	Payload *models.PaginatedProjectResults
}

func (o *FetchContributingProjectsOK) Error() string {
	return fmt.Sprintf("[GET /user/projects/contributing][%d] fetchContributingProjectsOK  %+v", 200, o.Payload)
}
func (o *FetchContributingProjectsOK) GetPayload() *models.PaginatedProjectResults {
	return o.Payload
}

func (o *FetchContributingProjectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginatedProjectResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchContributingProjectsBadRequest creates a FetchContributingProjectsBadRequest with default headers values
func NewFetchContributingProjectsBadRequest() *FetchContributingProjectsBadRequest {
	return &FetchContributingProjectsBadRequest{}
}

/* FetchContributingProjectsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type FetchContributingProjectsBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *FetchContributingProjectsBadRequest) Error() string {
	return fmt.Sprintf("[GET /user/projects/contributing][%d] fetchContributingProjectsBadRequest  %+v", 400, o.Payload)
}
func (o *FetchContributingProjectsBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *FetchContributingProjectsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchContributingProjectsUnauthorized creates a FetchContributingProjectsUnauthorized with default headers values
func NewFetchContributingProjectsUnauthorized() *FetchContributingProjectsUnauthorized {
	return &FetchContributingProjectsUnauthorized{}
}

/* FetchContributingProjectsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type FetchContributingProjectsUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *FetchContributingProjectsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/projects/contributing][%d] fetchContributingProjectsUnauthorized  %+v", 401, o.Payload)
}
func (o *FetchContributingProjectsUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *FetchContributingProjectsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchContributingProjectsForbidden creates a FetchContributingProjectsForbidden with default headers values
func NewFetchContributingProjectsForbidden() *FetchContributingProjectsForbidden {
	return &FetchContributingProjectsForbidden{}
}

/* FetchContributingProjectsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type FetchContributingProjectsForbidden struct {
	Payload *models.ErrorMessage
}

func (o *FetchContributingProjectsForbidden) Error() string {
	return fmt.Sprintf("[GET /user/projects/contributing][%d] fetchContributingProjectsForbidden  %+v", 403, o.Payload)
}
func (o *FetchContributingProjectsForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *FetchContributingProjectsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchContributingProjectsNotFound creates a FetchContributingProjectsNotFound with default headers values
func NewFetchContributingProjectsNotFound() *FetchContributingProjectsNotFound {
	return &FetchContributingProjectsNotFound{}
}

/* FetchContributingProjectsNotFound describes a response with status code 404, with default header values.

Not found
*/
type FetchContributingProjectsNotFound struct {
	Payload *models.ErrorMessage
}

func (o *FetchContributingProjectsNotFound) Error() string {
	return fmt.Sprintf("[GET /user/projects/contributing][%d] fetchContributingProjectsNotFound  %+v", 404, o.Payload)
}
func (o *FetchContributingProjectsNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *FetchContributingProjectsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchContributingProjectsInternalServerError creates a FetchContributingProjectsInternalServerError with default headers values
func NewFetchContributingProjectsInternalServerError() *FetchContributingProjectsInternalServerError {
	return &FetchContributingProjectsInternalServerError{}
}

/* FetchContributingProjectsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type FetchContributingProjectsInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *FetchContributingProjectsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /user/projects/contributing][%d] fetchContributingProjectsInternalServerError  %+v", 500, o.Payload)
}
func (o *FetchContributingProjectsInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *FetchContributingProjectsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
