// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetForDatasetReader is a Reader for the GetForDataset structure.
type GetForDatasetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetForDatasetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetForDatasetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetForDatasetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetForDatasetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetForDatasetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetForDatasetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetForDatasetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetForDatasetOK creates a GetForDatasetOK with default headers values
func NewGetForDatasetOK() *GetForDatasetOK {
	return &GetForDatasetOK{}
}

/* GetForDatasetOK describes a response with status code 200, with default header values.

Webhook subscription retrieved successfully.
*/
type GetForDatasetOK struct {
	Payload *models.Subscription
}

func (o *GetForDatasetOK) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/datasets/{owner}/{id}][%d] getForDatasetOK  %+v", 200, o.Payload)
}
func (o *GetForDatasetOK) GetPayload() *models.Subscription {
	return o.Payload
}

func (o *GetForDatasetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Subscription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForDatasetBadRequest creates a GetForDatasetBadRequest with default headers values
func NewGetForDatasetBadRequest() *GetForDatasetBadRequest {
	return &GetForDatasetBadRequest{}
}

/* GetForDatasetBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetForDatasetBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetForDatasetBadRequest) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/datasets/{owner}/{id}][%d] getForDatasetBadRequest  %+v", 400, o.Payload)
}
func (o *GetForDatasetBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForDatasetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForDatasetUnauthorized creates a GetForDatasetUnauthorized with default headers values
func NewGetForDatasetUnauthorized() *GetForDatasetUnauthorized {
	return &GetForDatasetUnauthorized{}
}

/* GetForDatasetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetForDatasetUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetForDatasetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/datasets/{owner}/{id}][%d] getForDatasetUnauthorized  %+v", 401, o.Payload)
}
func (o *GetForDatasetUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForDatasetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForDatasetForbidden creates a GetForDatasetForbidden with default headers values
func NewGetForDatasetForbidden() *GetForDatasetForbidden {
	return &GetForDatasetForbidden{}
}

/* GetForDatasetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetForDatasetForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetForDatasetForbidden) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/datasets/{owner}/{id}][%d] getForDatasetForbidden  %+v", 403, o.Payload)
}
func (o *GetForDatasetForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForDatasetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForDatasetNotFound creates a GetForDatasetNotFound with default headers values
func NewGetForDatasetNotFound() *GetForDatasetNotFound {
	return &GetForDatasetNotFound{}
}

/* GetForDatasetNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetForDatasetNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetForDatasetNotFound) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/datasets/{owner}/{id}][%d] getForDatasetNotFound  %+v", 404, o.Payload)
}
func (o *GetForDatasetNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForDatasetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForDatasetInternalServerError creates a GetForDatasetInternalServerError with default headers values
func NewGetForDatasetInternalServerError() *GetForDatasetInternalServerError {
	return &GetForDatasetInternalServerError{}
}

/* GetForDatasetInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetForDatasetInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetForDatasetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /user/webhooks/datasets/{owner}/{id}][%d] getForDatasetInternalServerError  %+v", 500, o.Payload)
}
func (o *GetForDatasetInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetForDatasetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
