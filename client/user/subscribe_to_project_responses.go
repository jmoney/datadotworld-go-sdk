// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// SubscribeToProjectReader is a Reader for the SubscribeToProject structure.
type SubscribeToProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubscribeToProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSubscribeToProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSubscribeToProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSubscribeToProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSubscribeToProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSubscribeToProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSubscribeToProjectUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSubscribeToProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSubscribeToProjectOK creates a SubscribeToProjectOK with default headers values
func NewSubscribeToProjectOK() *SubscribeToProjectOK {
	return &SubscribeToProjectOK{}
}

/* SubscribeToProjectOK describes a response with status code 200, with default header values.

Webhook subscription created successfully.
*/
type SubscribeToProjectOK struct {
	Payload *models.SuccessMessage
}

func (o *SubscribeToProjectOK) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/projects/{owner}/{id}][%d] subscribeToProjectOK  %+v", 200, o.Payload)
}
func (o *SubscribeToProjectOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *SubscribeToProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeToProjectBadRequest creates a SubscribeToProjectBadRequest with default headers values
func NewSubscribeToProjectBadRequest() *SubscribeToProjectBadRequest {
	return &SubscribeToProjectBadRequest{}
}

/* SubscribeToProjectBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SubscribeToProjectBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *SubscribeToProjectBadRequest) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/projects/{owner}/{id}][%d] subscribeToProjectBadRequest  %+v", 400, o.Payload)
}
func (o *SubscribeToProjectBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SubscribeToProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeToProjectUnauthorized creates a SubscribeToProjectUnauthorized with default headers values
func NewSubscribeToProjectUnauthorized() *SubscribeToProjectUnauthorized {
	return &SubscribeToProjectUnauthorized{}
}

/* SubscribeToProjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SubscribeToProjectUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *SubscribeToProjectUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/projects/{owner}/{id}][%d] subscribeToProjectUnauthorized  %+v", 401, o.Payload)
}
func (o *SubscribeToProjectUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SubscribeToProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeToProjectForbidden creates a SubscribeToProjectForbidden with default headers values
func NewSubscribeToProjectForbidden() *SubscribeToProjectForbidden {
	return &SubscribeToProjectForbidden{}
}

/* SubscribeToProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SubscribeToProjectForbidden struct {
	Payload *models.ErrorMessage
}

func (o *SubscribeToProjectForbidden) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/projects/{owner}/{id}][%d] subscribeToProjectForbidden  %+v", 403, o.Payload)
}
func (o *SubscribeToProjectForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SubscribeToProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeToProjectNotFound creates a SubscribeToProjectNotFound with default headers values
func NewSubscribeToProjectNotFound() *SubscribeToProjectNotFound {
	return &SubscribeToProjectNotFound{}
}

/* SubscribeToProjectNotFound describes a response with status code 404, with default header values.

Not found
*/
type SubscribeToProjectNotFound struct {
	Payload *models.ErrorMessage
}

func (o *SubscribeToProjectNotFound) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/projects/{owner}/{id}][%d] subscribeToProjectNotFound  %+v", 404, o.Payload)
}
func (o *SubscribeToProjectNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SubscribeToProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeToProjectUnprocessableEntity creates a SubscribeToProjectUnprocessableEntity with default headers values
func NewSubscribeToProjectUnprocessableEntity() *SubscribeToProjectUnprocessableEntity {
	return &SubscribeToProjectUnprocessableEntity{}
}

/* SubscribeToProjectUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type SubscribeToProjectUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *SubscribeToProjectUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/projects/{owner}/{id}][%d] subscribeToProjectUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *SubscribeToProjectUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SubscribeToProjectUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeToProjectInternalServerError creates a SubscribeToProjectInternalServerError with default headers values
func NewSubscribeToProjectInternalServerError() *SubscribeToProjectInternalServerError {
	return &SubscribeToProjectInternalServerError{}
}

/* SubscribeToProjectInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type SubscribeToProjectInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *SubscribeToProjectInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /user/webhooks/projects/{owner}/{id}][%d] subscribeToProjectInternalServerError  %+v", 500, o.Payload)
}
func (o *SubscribeToProjectInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *SubscribeToProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
