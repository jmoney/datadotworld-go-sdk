// Code generated by go-swagger; DO NOT EDIT.

package collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetCatalogReader is a Reader for the GetCatalog structure.
type GetCatalogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCatalogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCatalogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCatalogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCatalogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCatalogForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCatalogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCatalogInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCatalogOK creates a GetCatalogOK with default headers values
func NewGetCatalogOK() *GetCatalogOK {
	return &GetCatalogOK{}
}

/* GetCatalogOK describes a response with status code 200, with default header values.

Successfully retrieved collection
*/
type GetCatalogOK struct {
	Payload *models.MetadataResourceDto
}

func (o *GetCatalogOK) Error() string {
	return fmt.Sprintf("[GET /metadata/collections/{owner}/{id}][%d] getCatalogOK  %+v", 200, o.Payload)
}
func (o *GetCatalogOK) GetPayload() *models.MetadataResourceDto {
	return o.Payload
}

func (o *GetCatalogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetadataResourceDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCatalogBadRequest creates a GetCatalogBadRequest with default headers values
func NewGetCatalogBadRequest() *GetCatalogBadRequest {
	return &GetCatalogBadRequest{}
}

/* GetCatalogBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCatalogBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetCatalogBadRequest) Error() string {
	return fmt.Sprintf("[GET /metadata/collections/{owner}/{id}][%d] getCatalogBadRequest  %+v", 400, o.Payload)
}
func (o *GetCatalogBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetCatalogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCatalogUnauthorized creates a GetCatalogUnauthorized with default headers values
func NewGetCatalogUnauthorized() *GetCatalogUnauthorized {
	return &GetCatalogUnauthorized{}
}

/* GetCatalogUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCatalogUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetCatalogUnauthorized) Error() string {
	return fmt.Sprintf("[GET /metadata/collections/{owner}/{id}][%d] getCatalogUnauthorized  %+v", 401, o.Payload)
}
func (o *GetCatalogUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetCatalogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCatalogForbidden creates a GetCatalogForbidden with default headers values
func NewGetCatalogForbidden() *GetCatalogForbidden {
	return &GetCatalogForbidden{}
}

/* GetCatalogForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCatalogForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetCatalogForbidden) Error() string {
	return fmt.Sprintf("[GET /metadata/collections/{owner}/{id}][%d] getCatalogForbidden  %+v", 403, o.Payload)
}
func (o *GetCatalogForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetCatalogForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCatalogNotFound creates a GetCatalogNotFound with default headers values
func NewGetCatalogNotFound() *GetCatalogNotFound {
	return &GetCatalogNotFound{}
}

/* GetCatalogNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetCatalogNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetCatalogNotFound) Error() string {
	return fmt.Sprintf("[GET /metadata/collections/{owner}/{id}][%d] getCatalogNotFound  %+v", 404, o.Payload)
}
func (o *GetCatalogNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetCatalogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCatalogInternalServerError creates a GetCatalogInternalServerError with default headers values
func NewGetCatalogInternalServerError() *GetCatalogInternalServerError {
	return &GetCatalogInternalServerError{}
}

/* GetCatalogInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetCatalogInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetCatalogInternalServerError) Error() string {
	return fmt.Sprintf("[GET /metadata/collections/{owner}/{id}][%d] getCatalogInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCatalogInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetCatalogInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
