// Code generated by go-swagger; DO NOT EDIT.

package collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// ReplaceCatalogReader is a Reader for the ReplaceCatalog structure.
type ReplaceCatalogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceCatalogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceCatalogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReplaceCatalogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReplaceCatalogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReplaceCatalogForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReplaceCatalogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReplaceCatalogConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewReplaceCatalogUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReplaceCatalogInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReplaceCatalogOK creates a ReplaceCatalogOK with default headers values
func NewReplaceCatalogOK() *ReplaceCatalogOK {
	return &ReplaceCatalogOK{}
}

/* ReplaceCatalogOK describes a response with status code 200, with default header values.

Collection created successfully.
*/
type ReplaceCatalogOK struct {
	Payload *models.CreateResponse
}

func (o *ReplaceCatalogOK) Error() string {
	return fmt.Sprintf("[PUT /metadata/collections/{owner}/{id}][%d] replaceCatalogOK  %+v", 200, o.Payload)
}
func (o *ReplaceCatalogOK) GetPayload() *models.CreateResponse {
	return o.Payload
}

func (o *ReplaceCatalogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogBadRequest creates a ReplaceCatalogBadRequest with default headers values
func NewReplaceCatalogBadRequest() *ReplaceCatalogBadRequest {
	return &ReplaceCatalogBadRequest{}
}

/* ReplaceCatalogBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ReplaceCatalogBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogBadRequest) Error() string {
	return fmt.Sprintf("[PUT /metadata/collections/{owner}/{id}][%d] replaceCatalogBadRequest  %+v", 400, o.Payload)
}
func (o *ReplaceCatalogBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogUnauthorized creates a ReplaceCatalogUnauthorized with default headers values
func NewReplaceCatalogUnauthorized() *ReplaceCatalogUnauthorized {
	return &ReplaceCatalogUnauthorized{}
}

/* ReplaceCatalogUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ReplaceCatalogUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /metadata/collections/{owner}/{id}][%d] replaceCatalogUnauthorized  %+v", 401, o.Payload)
}
func (o *ReplaceCatalogUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogForbidden creates a ReplaceCatalogForbidden with default headers values
func NewReplaceCatalogForbidden() *ReplaceCatalogForbidden {
	return &ReplaceCatalogForbidden{}
}

/* ReplaceCatalogForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ReplaceCatalogForbidden struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogForbidden) Error() string {
	return fmt.Sprintf("[PUT /metadata/collections/{owner}/{id}][%d] replaceCatalogForbidden  %+v", 403, o.Payload)
}
func (o *ReplaceCatalogForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogNotFound creates a ReplaceCatalogNotFound with default headers values
func NewReplaceCatalogNotFound() *ReplaceCatalogNotFound {
	return &ReplaceCatalogNotFound{}
}

/* ReplaceCatalogNotFound describes a response with status code 404, with default header values.

Not found
*/
type ReplaceCatalogNotFound struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogNotFound) Error() string {
	return fmt.Sprintf("[PUT /metadata/collections/{owner}/{id}][%d] replaceCatalogNotFound  %+v", 404, o.Payload)
}
func (o *ReplaceCatalogNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogConflict creates a ReplaceCatalogConflict with default headers values
func NewReplaceCatalogConflict() *ReplaceCatalogConflict {
	return &ReplaceCatalogConflict{}
}

/* ReplaceCatalogConflict describes a response with status code 409, with default header values.

Conflict
*/
type ReplaceCatalogConflict struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogConflict) Error() string {
	return fmt.Sprintf("[PUT /metadata/collections/{owner}/{id}][%d] replaceCatalogConflict  %+v", 409, o.Payload)
}
func (o *ReplaceCatalogConflict) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogUnprocessableEntity creates a ReplaceCatalogUnprocessableEntity with default headers values
func NewReplaceCatalogUnprocessableEntity() *ReplaceCatalogUnprocessableEntity {
	return &ReplaceCatalogUnprocessableEntity{}
}

/* ReplaceCatalogUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type ReplaceCatalogUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /metadata/collections/{owner}/{id}][%d] replaceCatalogUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *ReplaceCatalogUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogInternalServerError creates a ReplaceCatalogInternalServerError with default headers values
func NewReplaceCatalogInternalServerError() *ReplaceCatalogInternalServerError {
	return &ReplaceCatalogInternalServerError{}
}

/* ReplaceCatalogInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type ReplaceCatalogInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /metadata/collections/{owner}/{id}][%d] replaceCatalogInternalServerError  %+v", 500, o.Payload)
}
func (o *ReplaceCatalogInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
