// Code generated by go-swagger; DO NOT EDIT.

package collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetCatalogsParams creates a new GetCatalogsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetCatalogsParams() *GetCatalogsParams {
	return &GetCatalogsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetCatalogsParamsWithTimeout creates a new GetCatalogsParams object
// with the ability to set a timeout on a request.
func NewGetCatalogsParamsWithTimeout(timeout time.Duration) *GetCatalogsParams {
	return &GetCatalogsParams{
		timeout: timeout,
	}
}

// NewGetCatalogsParamsWithContext creates a new GetCatalogsParams object
// with the ability to set a context for a request.
func NewGetCatalogsParamsWithContext(ctx context.Context) *GetCatalogsParams {
	return &GetCatalogsParams{
		Context: ctx,
	}
}

// NewGetCatalogsParamsWithHTTPClient creates a new GetCatalogsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetCatalogsParamsWithHTTPClient(client *http.Client) *GetCatalogsParams {
	return &GetCatalogsParams{
		HTTPClient: client,
	}
}

/* GetCatalogsParams contains all the parameters to send to the API endpoint
   for the get catalogs operation.

   Typically these are written to a http.Request.
*/
type GetCatalogsParams struct {

	// From.
	From *string

	// Owner.
	Owner string

	// Size.
	Size *string

	// Sort.
	Sort *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get catalogs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCatalogsParams) WithDefaults() *GetCatalogsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get catalogs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCatalogsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get catalogs params
func (o *GetCatalogsParams) WithTimeout(timeout time.Duration) *GetCatalogsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get catalogs params
func (o *GetCatalogsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get catalogs params
func (o *GetCatalogsParams) WithContext(ctx context.Context) *GetCatalogsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get catalogs params
func (o *GetCatalogsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get catalogs params
func (o *GetCatalogsParams) WithHTTPClient(client *http.Client) *GetCatalogsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get catalogs params
func (o *GetCatalogsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFrom adds the from to the get catalogs params
func (o *GetCatalogsParams) WithFrom(from *string) *GetCatalogsParams {
	o.SetFrom(from)
	return o
}

// SetFrom adds the from to the get catalogs params
func (o *GetCatalogsParams) SetFrom(from *string) {
	o.From = from
}

// WithOwner adds the owner to the get catalogs params
func (o *GetCatalogsParams) WithOwner(owner string) *GetCatalogsParams {
	o.SetOwner(owner)
	return o
}

// SetOwner adds the owner to the get catalogs params
func (o *GetCatalogsParams) SetOwner(owner string) {
	o.Owner = owner
}

// WithSize adds the size to the get catalogs params
func (o *GetCatalogsParams) WithSize(size *string) *GetCatalogsParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get catalogs params
func (o *GetCatalogsParams) SetSize(size *string) {
	o.Size = size
}

// WithSort adds the sort to the get catalogs params
func (o *GetCatalogsParams) WithSort(sort *string) *GetCatalogsParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get catalogs params
func (o *GetCatalogsParams) SetSort(sort *string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *GetCatalogsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.From != nil {

		// query param from
		var qrFrom string

		if o.From != nil {
			qrFrom = *o.From
		}
		qFrom := qrFrom
		if qFrom != "" {

			if err := r.SetQueryParam("from", qFrom); err != nil {
				return err
			}
		}
	}

	// path param owner
	if err := r.SetPathParam("owner", o.Owner); err != nil {
		return err
	}

	if o.Size != nil {

		// query param size
		var qrSize string

		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := qrSize
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
