// Code generated by go-swagger; DO NOT EDIT.

package collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// UpdateCatalogReader is a Reader for the UpdateCatalog structure.
type UpdateCatalogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCatalogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCatalogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCatalogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateCatalogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCatalogForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCatalogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateCatalogConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCatalogUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCatalogInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateCatalogOK creates a UpdateCatalogOK with default headers values
func NewUpdateCatalogOK() *UpdateCatalogOK {
	return &UpdateCatalogOK{}
}

/* UpdateCatalogOK describes a response with status code 200, with default header values.

Collection created successfully.
*/
type UpdateCatalogOK struct {
	Payload *models.CreateResponse
}

func (o *UpdateCatalogOK) Error() string {
	return fmt.Sprintf("[PATCH /metadata/collections/{owner}/{id}][%d] updateCatalogOK  %+v", 200, o.Payload)
}
func (o *UpdateCatalogOK) GetPayload() *models.CreateResponse {
	return o.Payload
}

func (o *UpdateCatalogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCatalogBadRequest creates a UpdateCatalogBadRequest with default headers values
func NewUpdateCatalogBadRequest() *UpdateCatalogBadRequest {
	return &UpdateCatalogBadRequest{}
}

/* UpdateCatalogBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateCatalogBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *UpdateCatalogBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /metadata/collections/{owner}/{id}][%d] updateCatalogBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateCatalogBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UpdateCatalogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCatalogUnauthorized creates a UpdateCatalogUnauthorized with default headers values
func NewUpdateCatalogUnauthorized() *UpdateCatalogUnauthorized {
	return &UpdateCatalogUnauthorized{}
}

/* UpdateCatalogUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateCatalogUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *UpdateCatalogUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /metadata/collections/{owner}/{id}][%d] updateCatalogUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateCatalogUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UpdateCatalogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCatalogForbidden creates a UpdateCatalogForbidden with default headers values
func NewUpdateCatalogForbidden() *UpdateCatalogForbidden {
	return &UpdateCatalogForbidden{}
}

/* UpdateCatalogForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateCatalogForbidden struct {
	Payload *models.ErrorMessage
}

func (o *UpdateCatalogForbidden) Error() string {
	return fmt.Sprintf("[PATCH /metadata/collections/{owner}/{id}][%d] updateCatalogForbidden  %+v", 403, o.Payload)
}
func (o *UpdateCatalogForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UpdateCatalogForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCatalogNotFound creates a UpdateCatalogNotFound with default headers values
func NewUpdateCatalogNotFound() *UpdateCatalogNotFound {
	return &UpdateCatalogNotFound{}
}

/* UpdateCatalogNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateCatalogNotFound struct {
	Payload *models.ErrorMessage
}

func (o *UpdateCatalogNotFound) Error() string {
	return fmt.Sprintf("[PATCH /metadata/collections/{owner}/{id}][%d] updateCatalogNotFound  %+v", 404, o.Payload)
}
func (o *UpdateCatalogNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UpdateCatalogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCatalogConflict creates a UpdateCatalogConflict with default headers values
func NewUpdateCatalogConflict() *UpdateCatalogConflict {
	return &UpdateCatalogConflict{}
}

/* UpdateCatalogConflict describes a response with status code 409, with default header values.

Conflict
*/
type UpdateCatalogConflict struct {
	Payload *models.ErrorMessage
}

func (o *UpdateCatalogConflict) Error() string {
	return fmt.Sprintf("[PATCH /metadata/collections/{owner}/{id}][%d] updateCatalogConflict  %+v", 409, o.Payload)
}
func (o *UpdateCatalogConflict) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UpdateCatalogConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCatalogUnprocessableEntity creates a UpdateCatalogUnprocessableEntity with default headers values
func NewUpdateCatalogUnprocessableEntity() *UpdateCatalogUnprocessableEntity {
	return &UpdateCatalogUnprocessableEntity{}
}

/* UpdateCatalogUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type UpdateCatalogUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *UpdateCatalogUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /metadata/collections/{owner}/{id}][%d] updateCatalogUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *UpdateCatalogUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UpdateCatalogUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCatalogInternalServerError creates a UpdateCatalogInternalServerError with default headers values
func NewUpdateCatalogInternalServerError() *UpdateCatalogInternalServerError {
	return &UpdateCatalogInternalServerError{}
}

/* UpdateCatalogInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UpdateCatalogInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *UpdateCatalogInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /metadata/collections/{owner}/{id}][%d] updateCatalogInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateCatalogInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UpdateCatalogInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
