// Code generated by go-swagger; DO NOT EDIT.

package streams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// DeleteRecordsReader is a Reader for the DeleteRecords structure.
type DeleteRecordsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRecordsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRecordsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRecordsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteRecordsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRecordsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRecordsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteRecordsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRecordsOK creates a DeleteRecordsOK with default headers values
func NewDeleteRecordsOK() *DeleteRecordsOK {
	return &DeleteRecordsOK{}
}

/* DeleteRecordsOK describes a response with status code 200, with default header values.

Stream updated successfully.
*/
type DeleteRecordsOK struct {
	Payload *models.SuccessMessage
}

func (o *DeleteRecordsOK) Error() string {
	return fmt.Sprintf("[DELETE /streams/{owner}/{id}/{streamId}/records][%d] deleteRecordsOK  %+v", 200, o.Payload)
}
func (o *DeleteRecordsOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *DeleteRecordsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRecordsBadRequest creates a DeleteRecordsBadRequest with default headers values
func NewDeleteRecordsBadRequest() *DeleteRecordsBadRequest {
	return &DeleteRecordsBadRequest{}
}

/* DeleteRecordsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteRecordsBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *DeleteRecordsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /streams/{owner}/{id}/{streamId}/records][%d] deleteRecordsBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteRecordsBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteRecordsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRecordsUnauthorized creates a DeleteRecordsUnauthorized with default headers values
func NewDeleteRecordsUnauthorized() *DeleteRecordsUnauthorized {
	return &DeleteRecordsUnauthorized{}
}

/* DeleteRecordsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteRecordsUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *DeleteRecordsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /streams/{owner}/{id}/{streamId}/records][%d] deleteRecordsUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteRecordsUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteRecordsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRecordsForbidden creates a DeleteRecordsForbidden with default headers values
func NewDeleteRecordsForbidden() *DeleteRecordsForbidden {
	return &DeleteRecordsForbidden{}
}

/* DeleteRecordsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteRecordsForbidden struct {
	Payload *models.ErrorMessage
}

func (o *DeleteRecordsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /streams/{owner}/{id}/{streamId}/records][%d] deleteRecordsForbidden  %+v", 403, o.Payload)
}
func (o *DeleteRecordsForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteRecordsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRecordsNotFound creates a DeleteRecordsNotFound with default headers values
func NewDeleteRecordsNotFound() *DeleteRecordsNotFound {
	return &DeleteRecordsNotFound{}
}

/* DeleteRecordsNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteRecordsNotFound struct {
	Payload *models.ErrorMessage
}

func (o *DeleteRecordsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /streams/{owner}/{id}/{streamId}/records][%d] deleteRecordsNotFound  %+v", 404, o.Payload)
}
func (o *DeleteRecordsNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteRecordsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRecordsInternalServerError creates a DeleteRecordsInternalServerError with default headers values
func NewDeleteRecordsInternalServerError() *DeleteRecordsInternalServerError {
	return &DeleteRecordsInternalServerError{}
}

/* DeleteRecordsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DeleteRecordsInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *DeleteRecordsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /streams/{owner}/{id}/{streamId}/records][%d] deleteRecordsInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteRecordsInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DeleteRecordsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
