// Code generated by go-swagger; DO NOT EDIT.

package streams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetStreamSchemaReader is a Reader for the GetStreamSchema structure.
type GetStreamSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStreamSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStreamSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStreamSchemaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetStreamSchemaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetStreamSchemaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStreamSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStreamSchemaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetStreamSchemaOK creates a GetStreamSchemaOK with default headers values
func NewGetStreamSchemaOK() *GetStreamSchemaOK {
	return &GetStreamSchemaOK{}
}

/* GetStreamSchemaOK describes a response with status code 200, with default header values.

Successfully retrieved stream schema.
*/
type GetStreamSchemaOK struct {
	Payload *models.StreamSchema
}

func (o *GetStreamSchemaOK) Error() string {
	return fmt.Sprintf("[GET /streams/{owner}/{id}/{streamId}/schema][%d] getStreamSchemaOK  %+v", 200, o.Payload)
}
func (o *GetStreamSchemaOK) GetPayload() *models.StreamSchema {
	return o.Payload
}

func (o *GetStreamSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StreamSchema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStreamSchemaBadRequest creates a GetStreamSchemaBadRequest with default headers values
func NewGetStreamSchemaBadRequest() *GetStreamSchemaBadRequest {
	return &GetStreamSchemaBadRequest{}
}

/* GetStreamSchemaBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetStreamSchemaBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetStreamSchemaBadRequest) Error() string {
	return fmt.Sprintf("[GET /streams/{owner}/{id}/{streamId}/schema][%d] getStreamSchemaBadRequest  %+v", 400, o.Payload)
}
func (o *GetStreamSchemaBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetStreamSchemaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStreamSchemaUnauthorized creates a GetStreamSchemaUnauthorized with default headers values
func NewGetStreamSchemaUnauthorized() *GetStreamSchemaUnauthorized {
	return &GetStreamSchemaUnauthorized{}
}

/* GetStreamSchemaUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetStreamSchemaUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetStreamSchemaUnauthorized) Error() string {
	return fmt.Sprintf("[GET /streams/{owner}/{id}/{streamId}/schema][%d] getStreamSchemaUnauthorized  %+v", 401, o.Payload)
}
func (o *GetStreamSchemaUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetStreamSchemaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStreamSchemaForbidden creates a GetStreamSchemaForbidden with default headers values
func NewGetStreamSchemaForbidden() *GetStreamSchemaForbidden {
	return &GetStreamSchemaForbidden{}
}

/* GetStreamSchemaForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetStreamSchemaForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetStreamSchemaForbidden) Error() string {
	return fmt.Sprintf("[GET /streams/{owner}/{id}/{streamId}/schema][%d] getStreamSchemaForbidden  %+v", 403, o.Payload)
}
func (o *GetStreamSchemaForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetStreamSchemaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStreamSchemaNotFound creates a GetStreamSchemaNotFound with default headers values
func NewGetStreamSchemaNotFound() *GetStreamSchemaNotFound {
	return &GetStreamSchemaNotFound{}
}

/* GetStreamSchemaNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetStreamSchemaNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetStreamSchemaNotFound) Error() string {
	return fmt.Sprintf("[GET /streams/{owner}/{id}/{streamId}/schema][%d] getStreamSchemaNotFound  %+v", 404, o.Payload)
}
func (o *GetStreamSchemaNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetStreamSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStreamSchemaInternalServerError creates a GetStreamSchemaInternalServerError with default headers values
func NewGetStreamSchemaInternalServerError() *GetStreamSchemaInternalServerError {
	return &GetStreamSchemaInternalServerError{}
}

/* GetStreamSchemaInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetStreamSchemaInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetStreamSchemaInternalServerError) Error() string {
	return fmt.Sprintf("[GET /streams/{owner}/{id}/{streamId}/schema][%d] getStreamSchemaInternalServerError  %+v", 500, o.Payload)
}
func (o *GetStreamSchemaInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetStreamSchemaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
