// Code generated by go-swagger; DO NOT EDIT.

package uploads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// UploadFileReader is a Reader for the UploadFile structure.
type UploadFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUploadFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUploadFileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUploadFileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUploadFileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUploadFileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewUploadFileRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUploadFileUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUploadFileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUploadFileOK creates a UploadFileOK with default headers values
func NewUploadFileOK() *UploadFileOK {
	return &UploadFileOK{}
}

/* UploadFileOK describes a response with status code 200, with default header values.

File uploaded successfully.
*/
type UploadFileOK struct {
	Payload *models.SuccessMessage
}

func (o *UploadFileOK) Error() string {
	return fmt.Sprintf("[PUT /uploads/{owner}/{id}/files/{file}][%d] uploadFileOK  %+v", 200, o.Payload)
}
func (o *UploadFileOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *UploadFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFileBadRequest creates a UploadFileBadRequest with default headers values
func NewUploadFileBadRequest() *UploadFileBadRequest {
	return &UploadFileBadRequest{}
}

/* UploadFileBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UploadFileBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *UploadFileBadRequest) Error() string {
	return fmt.Sprintf("[PUT /uploads/{owner}/{id}/files/{file}][%d] uploadFileBadRequest  %+v", 400, o.Payload)
}
func (o *UploadFileBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFileUnauthorized creates a UploadFileUnauthorized with default headers values
func NewUploadFileUnauthorized() *UploadFileUnauthorized {
	return &UploadFileUnauthorized{}
}

/* UploadFileUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UploadFileUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *UploadFileUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /uploads/{owner}/{id}/files/{file}][%d] uploadFileUnauthorized  %+v", 401, o.Payload)
}
func (o *UploadFileUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFileForbidden creates a UploadFileForbidden with default headers values
func NewUploadFileForbidden() *UploadFileForbidden {
	return &UploadFileForbidden{}
}

/* UploadFileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UploadFileForbidden struct {
	Payload *models.ErrorMessage
}

func (o *UploadFileForbidden) Error() string {
	return fmt.Sprintf("[PUT /uploads/{owner}/{id}/files/{file}][%d] uploadFileForbidden  %+v", 403, o.Payload)
}
func (o *UploadFileForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFileNotFound creates a UploadFileNotFound with default headers values
func NewUploadFileNotFound() *UploadFileNotFound {
	return &UploadFileNotFound{}
}

/* UploadFileNotFound describes a response with status code 404, with default header values.

Not found
*/
type UploadFileNotFound struct {
	Payload *models.ErrorMessage
}

func (o *UploadFileNotFound) Error() string {
	return fmt.Sprintf("[PUT /uploads/{owner}/{id}/files/{file}][%d] uploadFileNotFound  %+v", 404, o.Payload)
}
func (o *UploadFileNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFileRequestEntityTooLarge creates a UploadFileRequestEntityTooLarge with default headers values
func NewUploadFileRequestEntityTooLarge() *UploadFileRequestEntityTooLarge {
	return &UploadFileRequestEntityTooLarge{}
}

/* UploadFileRequestEntityTooLarge describes a response with status code 413, with default header values.

Upload too large
*/
type UploadFileRequestEntityTooLarge struct {
	Payload *models.ErrorMessage
}

func (o *UploadFileRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[PUT /uploads/{owner}/{id}/files/{file}][%d] uploadFileRequestEntityTooLarge  %+v", 413, o.Payload)
}
func (o *UploadFileRequestEntityTooLarge) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFileRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFileUnprocessableEntity creates a UploadFileUnprocessableEntity with default headers values
func NewUploadFileUnprocessableEntity() *UploadFileUnprocessableEntity {
	return &UploadFileUnprocessableEntity{}
}

/* UploadFileUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type UploadFileUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *UploadFileUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /uploads/{owner}/{id}/files/{file}][%d] uploadFileUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *UploadFileUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFileUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFileInternalServerError creates a UploadFileInternalServerError with default headers values
func NewUploadFileInternalServerError() *UploadFileInternalServerError {
	return &UploadFileInternalServerError{}
}

/* UploadFileInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UploadFileInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *UploadFileInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /uploads/{owner}/{id}/files/{file}][%d] uploadFileInternalServerError  %+v", 500, o.Payload)
}
func (o *UploadFileInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
