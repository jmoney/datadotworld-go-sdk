// Code generated by go-swagger; DO NOT EDIT.

package uploads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// UploadFilesReader is a Reader for the UploadFiles structure.
type UploadFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUploadFilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUploadFilesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUploadFilesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUploadFilesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUploadFilesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewUploadFilesRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUploadFilesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUploadFilesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUploadFilesOK creates a UploadFilesOK with default headers values
func NewUploadFilesOK() *UploadFilesOK {
	return &UploadFilesOK{}
}

/* UploadFilesOK describes a response with status code 200, with default header values.

File(s) uploaded successfully.
*/
type UploadFilesOK struct {
	Payload *models.SuccessMessage
}

func (o *UploadFilesOK) Error() string {
	return fmt.Sprintf("[POST /uploads/{owner}/{id}/files][%d] uploadFilesOK  %+v", 200, o.Payload)
}
func (o *UploadFilesOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *UploadFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFilesBadRequest creates a UploadFilesBadRequest with default headers values
func NewUploadFilesBadRequest() *UploadFilesBadRequest {
	return &UploadFilesBadRequest{}
}

/* UploadFilesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UploadFilesBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *UploadFilesBadRequest) Error() string {
	return fmt.Sprintf("[POST /uploads/{owner}/{id}/files][%d] uploadFilesBadRequest  %+v", 400, o.Payload)
}
func (o *UploadFilesBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFilesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFilesUnauthorized creates a UploadFilesUnauthorized with default headers values
func NewUploadFilesUnauthorized() *UploadFilesUnauthorized {
	return &UploadFilesUnauthorized{}
}

/* UploadFilesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UploadFilesUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *UploadFilesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /uploads/{owner}/{id}/files][%d] uploadFilesUnauthorized  %+v", 401, o.Payload)
}
func (o *UploadFilesUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFilesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFilesForbidden creates a UploadFilesForbidden with default headers values
func NewUploadFilesForbidden() *UploadFilesForbidden {
	return &UploadFilesForbidden{}
}

/* UploadFilesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UploadFilesForbidden struct {
	Payload *models.ErrorMessage
}

func (o *UploadFilesForbidden) Error() string {
	return fmt.Sprintf("[POST /uploads/{owner}/{id}/files][%d] uploadFilesForbidden  %+v", 403, o.Payload)
}
func (o *UploadFilesForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFilesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFilesNotFound creates a UploadFilesNotFound with default headers values
func NewUploadFilesNotFound() *UploadFilesNotFound {
	return &UploadFilesNotFound{}
}

/* UploadFilesNotFound describes a response with status code 404, with default header values.

Not found
*/
type UploadFilesNotFound struct {
	Payload *models.ErrorMessage
}

func (o *UploadFilesNotFound) Error() string {
	return fmt.Sprintf("[POST /uploads/{owner}/{id}/files][%d] uploadFilesNotFound  %+v", 404, o.Payload)
}
func (o *UploadFilesNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFilesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFilesRequestEntityTooLarge creates a UploadFilesRequestEntityTooLarge with default headers values
func NewUploadFilesRequestEntityTooLarge() *UploadFilesRequestEntityTooLarge {
	return &UploadFilesRequestEntityTooLarge{}
}

/* UploadFilesRequestEntityTooLarge describes a response with status code 413, with default header values.

Upload too large
*/
type UploadFilesRequestEntityTooLarge struct {
	Payload *models.ErrorMessage
}

func (o *UploadFilesRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /uploads/{owner}/{id}/files][%d] uploadFilesRequestEntityTooLarge  %+v", 413, o.Payload)
}
func (o *UploadFilesRequestEntityTooLarge) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFilesRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFilesUnprocessableEntity creates a UploadFilesUnprocessableEntity with default headers values
func NewUploadFilesUnprocessableEntity() *UploadFilesUnprocessableEntity {
	return &UploadFilesUnprocessableEntity{}
}

/* UploadFilesUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type UploadFilesUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *UploadFilesUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /uploads/{owner}/{id}/files][%d] uploadFilesUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *UploadFilesUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFilesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFilesInternalServerError creates a UploadFilesInternalServerError with default headers values
func NewUploadFilesInternalServerError() *UploadFilesInternalServerError {
	return &UploadFilesInternalServerError{}
}

/* UploadFilesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type UploadFilesInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *UploadFilesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /uploads/{owner}/{id}/files][%d] uploadFilesInternalServerError  %+v", 500, o.Payload)
}
func (o *UploadFilesInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *UploadFilesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
