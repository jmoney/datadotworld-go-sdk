// Code generated by go-swagger; DO NOT EDIT.

package glossary

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// ReplaceCatalogGlossaryReader is a Reader for the ReplaceCatalogGlossary structure.
type ReplaceCatalogGlossaryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceCatalogGlossaryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceCatalogGlossaryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReplaceCatalogGlossaryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReplaceCatalogGlossaryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReplaceCatalogGlossaryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReplaceCatalogGlossaryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewReplaceCatalogGlossaryUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReplaceCatalogGlossaryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReplaceCatalogGlossaryOK creates a ReplaceCatalogGlossaryOK with default headers values
func NewReplaceCatalogGlossaryOK() *ReplaceCatalogGlossaryOK {
	return &ReplaceCatalogGlossaryOK{}
}

/* ReplaceCatalogGlossaryOK describes a response with status code 200, with default header values.

Glossary replaced successfully.
*/
type ReplaceCatalogGlossaryOK struct {
	Payload *models.SuccessMessage
}

func (o *ReplaceCatalogGlossaryOK) Error() string {
	return fmt.Sprintf("[PUT /metadata/glossary/{owner}/{id}][%d] replaceCatalogGlossaryOK  %+v", 200, o.Payload)
}
func (o *ReplaceCatalogGlossaryOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *ReplaceCatalogGlossaryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogGlossaryBadRequest creates a ReplaceCatalogGlossaryBadRequest with default headers values
func NewReplaceCatalogGlossaryBadRequest() *ReplaceCatalogGlossaryBadRequest {
	return &ReplaceCatalogGlossaryBadRequest{}
}

/* ReplaceCatalogGlossaryBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ReplaceCatalogGlossaryBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogGlossaryBadRequest) Error() string {
	return fmt.Sprintf("[PUT /metadata/glossary/{owner}/{id}][%d] replaceCatalogGlossaryBadRequest  %+v", 400, o.Payload)
}
func (o *ReplaceCatalogGlossaryBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogGlossaryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogGlossaryUnauthorized creates a ReplaceCatalogGlossaryUnauthorized with default headers values
func NewReplaceCatalogGlossaryUnauthorized() *ReplaceCatalogGlossaryUnauthorized {
	return &ReplaceCatalogGlossaryUnauthorized{}
}

/* ReplaceCatalogGlossaryUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ReplaceCatalogGlossaryUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogGlossaryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /metadata/glossary/{owner}/{id}][%d] replaceCatalogGlossaryUnauthorized  %+v", 401, o.Payload)
}
func (o *ReplaceCatalogGlossaryUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogGlossaryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogGlossaryForbidden creates a ReplaceCatalogGlossaryForbidden with default headers values
func NewReplaceCatalogGlossaryForbidden() *ReplaceCatalogGlossaryForbidden {
	return &ReplaceCatalogGlossaryForbidden{}
}

/* ReplaceCatalogGlossaryForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ReplaceCatalogGlossaryForbidden struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogGlossaryForbidden) Error() string {
	return fmt.Sprintf("[PUT /metadata/glossary/{owner}/{id}][%d] replaceCatalogGlossaryForbidden  %+v", 403, o.Payload)
}
func (o *ReplaceCatalogGlossaryForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogGlossaryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogGlossaryNotFound creates a ReplaceCatalogGlossaryNotFound with default headers values
func NewReplaceCatalogGlossaryNotFound() *ReplaceCatalogGlossaryNotFound {
	return &ReplaceCatalogGlossaryNotFound{}
}

/* ReplaceCatalogGlossaryNotFound describes a response with status code 404, with default header values.

Not found
*/
type ReplaceCatalogGlossaryNotFound struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogGlossaryNotFound) Error() string {
	return fmt.Sprintf("[PUT /metadata/glossary/{owner}/{id}][%d] replaceCatalogGlossaryNotFound  %+v", 404, o.Payload)
}
func (o *ReplaceCatalogGlossaryNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogGlossaryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogGlossaryUnprocessableEntity creates a ReplaceCatalogGlossaryUnprocessableEntity with default headers values
func NewReplaceCatalogGlossaryUnprocessableEntity() *ReplaceCatalogGlossaryUnprocessableEntity {
	return &ReplaceCatalogGlossaryUnprocessableEntity{}
}

/* ReplaceCatalogGlossaryUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type ReplaceCatalogGlossaryUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogGlossaryUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /metadata/glossary/{owner}/{id}][%d] replaceCatalogGlossaryUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *ReplaceCatalogGlossaryUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogGlossaryUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCatalogGlossaryInternalServerError creates a ReplaceCatalogGlossaryInternalServerError with default headers values
func NewReplaceCatalogGlossaryInternalServerError() *ReplaceCatalogGlossaryInternalServerError {
	return &ReplaceCatalogGlossaryInternalServerError{}
}

/* ReplaceCatalogGlossaryInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type ReplaceCatalogGlossaryInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *ReplaceCatalogGlossaryInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /metadata/glossary/{owner}/{id}][%d] replaceCatalogGlossaryInternalServerError  %+v", 500, o.Payload)
}
func (o *ReplaceCatalogGlossaryInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReplaceCatalogGlossaryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
