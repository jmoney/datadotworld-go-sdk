// Code generated by go-swagger; DO NOT EDIT.

package sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetTablesReader is a Reader for the GetTables structure.
type GetTablesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTablesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTablesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTablesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTablesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTablesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTablesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTablesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTablesOK creates a GetTablesOK with default headers values
func NewGetTablesOK() *GetTablesOK {
	return &GetTablesOK{}
}

/* GetTablesOK describes a response with status code 200, with default header values.

Successfully retrieved tables metadata
*/
type GetTablesOK struct {
	Payload *models.PaginatedMetadataResourceResults
}

func (o *GetTablesOK) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables][%d] getTablesOK  %+v", 200, o.Payload)
}
func (o *GetTablesOK) GetPayload() *models.PaginatedMetadataResourceResults {
	return o.Payload
}

func (o *GetTablesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginatedMetadataResourceResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTablesBadRequest creates a GetTablesBadRequest with default headers values
func NewGetTablesBadRequest() *GetTablesBadRequest {
	return &GetTablesBadRequest{}
}

/* GetTablesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetTablesBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetTablesBadRequest) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables][%d] getTablesBadRequest  %+v", 400, o.Payload)
}
func (o *GetTablesBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetTablesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTablesUnauthorized creates a GetTablesUnauthorized with default headers values
func NewGetTablesUnauthorized() *GetTablesUnauthorized {
	return &GetTablesUnauthorized{}
}

/* GetTablesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTablesUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetTablesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables][%d] getTablesUnauthorized  %+v", 401, o.Payload)
}
func (o *GetTablesUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetTablesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTablesForbidden creates a GetTablesForbidden with default headers values
func NewGetTablesForbidden() *GetTablesForbidden {
	return &GetTablesForbidden{}
}

/* GetTablesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetTablesForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetTablesForbidden) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables][%d] getTablesForbidden  %+v", 403, o.Payload)
}
func (o *GetTablesForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetTablesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTablesNotFound creates a GetTablesNotFound with default headers values
func NewGetTablesNotFound() *GetTablesNotFound {
	return &GetTablesNotFound{}
}

/* GetTablesNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetTablesNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetTablesNotFound) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables][%d] getTablesNotFound  %+v", 404, o.Payload)
}
func (o *GetTablesNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetTablesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTablesInternalServerError creates a GetTablesInternalServerError with default headers values
func NewGetTablesInternalServerError() *GetTablesInternalServerError {
	return &GetTablesInternalServerError{}
}

/* GetTablesInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetTablesInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetTablesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables][%d] getTablesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetTablesInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetTablesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
