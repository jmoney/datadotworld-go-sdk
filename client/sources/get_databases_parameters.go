// Code generated by go-swagger; DO NOT EDIT.

package sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetDatabasesParams creates a new GetDatabasesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetDatabasesParams() *GetDatabasesParams {
	return &GetDatabasesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetDatabasesParamsWithTimeout creates a new GetDatabasesParams object
// with the ability to set a timeout on a request.
func NewGetDatabasesParamsWithTimeout(timeout time.Duration) *GetDatabasesParams {
	return &GetDatabasesParams{
		timeout: timeout,
	}
}

// NewGetDatabasesParamsWithContext creates a new GetDatabasesParams object
// with the ability to set a context for a request.
func NewGetDatabasesParamsWithContext(ctx context.Context) *GetDatabasesParams {
	return &GetDatabasesParams{
		Context: ctx,
	}
}

// NewGetDatabasesParamsWithHTTPClient creates a new GetDatabasesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetDatabasesParamsWithHTTPClient(client *http.Client) *GetDatabasesParams {
	return &GetDatabasesParams{
		HTTPClient: client,
	}
}

/* GetDatabasesParams contains all the parameters to send to the API endpoint
   for the get databases operation.

   Typically these are written to a http.Request.
*/
type GetDatabasesParams struct {

	// From.
	From *string

	/* Owner.

	   id of the user or organization
	*/
	Owner string

	// Size.
	Size *string

	// Sort.
	Sort *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get databases params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDatabasesParams) WithDefaults() *GetDatabasesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get databases params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDatabasesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get databases params
func (o *GetDatabasesParams) WithTimeout(timeout time.Duration) *GetDatabasesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get databases params
func (o *GetDatabasesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get databases params
func (o *GetDatabasesParams) WithContext(ctx context.Context) *GetDatabasesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get databases params
func (o *GetDatabasesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get databases params
func (o *GetDatabasesParams) WithHTTPClient(client *http.Client) *GetDatabasesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get databases params
func (o *GetDatabasesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFrom adds the from to the get databases params
func (o *GetDatabasesParams) WithFrom(from *string) *GetDatabasesParams {
	o.SetFrom(from)
	return o
}

// SetFrom adds the from to the get databases params
func (o *GetDatabasesParams) SetFrom(from *string) {
	o.From = from
}

// WithOwner adds the owner to the get databases params
func (o *GetDatabasesParams) WithOwner(owner string) *GetDatabasesParams {
	o.SetOwner(owner)
	return o
}

// SetOwner adds the owner to the get databases params
func (o *GetDatabasesParams) SetOwner(owner string) {
	o.Owner = owner
}

// WithSize adds the size to the get databases params
func (o *GetDatabasesParams) WithSize(size *string) *GetDatabasesParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get databases params
func (o *GetDatabasesParams) SetSize(size *string) {
	o.Size = size
}

// WithSort adds the sort to the get databases params
func (o *GetDatabasesParams) WithSort(sort *string) *GetDatabasesParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get databases params
func (o *GetDatabasesParams) SetSort(sort *string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *GetDatabasesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.From != nil {

		// query param from
		var qrFrom string

		if o.From != nil {
			qrFrom = *o.From
		}
		qFrom := qrFrom
		if qFrom != "" {

			if err := r.SetQueryParam("from", qFrom); err != nil {
				return err
			}
		}
	}

	// path param owner
	if err := r.SetPathParam("owner", o.Owner); err != nil {
		return err
	}

	if o.Size != nil {

		// query param size
		var qrSize string

		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := qrSize
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
