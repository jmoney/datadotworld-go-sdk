// Code generated by go-swagger; DO NOT EDIT.

package sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// PatchCatalogColumnReader is a Reader for the PatchCatalogColumn structure.
type PatchCatalogColumnReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchCatalogColumnReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchCatalogColumnOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchCatalogColumnBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchCatalogColumnUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchCatalogColumnForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchCatalogColumnNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPatchCatalogColumnUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchCatalogColumnInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchCatalogColumnOK creates a PatchCatalogColumnOK with default headers values
func NewPatchCatalogColumnOK() *PatchCatalogColumnOK {
	return &PatchCatalogColumnOK{}
}

/* PatchCatalogColumnOK describes a response with status code 200, with default header values.

Column updated successfully.
*/
type PatchCatalogColumnOK struct {
	Payload *models.SuccessMessage
}

func (o *PatchCatalogColumnOK) Error() string {
	return fmt.Sprintf("[PATCH /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns/{columnid}][%d] patchCatalogColumnOK  %+v", 200, o.Payload)
}
func (o *PatchCatalogColumnOK) GetPayload() *models.SuccessMessage {
	return o.Payload
}

func (o *PatchCatalogColumnOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCatalogColumnBadRequest creates a PatchCatalogColumnBadRequest with default headers values
func NewPatchCatalogColumnBadRequest() *PatchCatalogColumnBadRequest {
	return &PatchCatalogColumnBadRequest{}
}

/* PatchCatalogColumnBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PatchCatalogColumnBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *PatchCatalogColumnBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns/{columnid}][%d] patchCatalogColumnBadRequest  %+v", 400, o.Payload)
}
func (o *PatchCatalogColumnBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchCatalogColumnBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCatalogColumnUnauthorized creates a PatchCatalogColumnUnauthorized with default headers values
func NewPatchCatalogColumnUnauthorized() *PatchCatalogColumnUnauthorized {
	return &PatchCatalogColumnUnauthorized{}
}

/* PatchCatalogColumnUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PatchCatalogColumnUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *PatchCatalogColumnUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns/{columnid}][%d] patchCatalogColumnUnauthorized  %+v", 401, o.Payload)
}
func (o *PatchCatalogColumnUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchCatalogColumnUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCatalogColumnForbidden creates a PatchCatalogColumnForbidden with default headers values
func NewPatchCatalogColumnForbidden() *PatchCatalogColumnForbidden {
	return &PatchCatalogColumnForbidden{}
}

/* PatchCatalogColumnForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PatchCatalogColumnForbidden struct {
	Payload *models.ErrorMessage
}

func (o *PatchCatalogColumnForbidden) Error() string {
	return fmt.Sprintf("[PATCH /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns/{columnid}][%d] patchCatalogColumnForbidden  %+v", 403, o.Payload)
}
func (o *PatchCatalogColumnForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchCatalogColumnForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCatalogColumnNotFound creates a PatchCatalogColumnNotFound with default headers values
func NewPatchCatalogColumnNotFound() *PatchCatalogColumnNotFound {
	return &PatchCatalogColumnNotFound{}
}

/* PatchCatalogColumnNotFound describes a response with status code 404, with default header values.

Not found
*/
type PatchCatalogColumnNotFound struct {
	Payload *models.ErrorMessage
}

func (o *PatchCatalogColumnNotFound) Error() string {
	return fmt.Sprintf("[PATCH /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns/{columnid}][%d] patchCatalogColumnNotFound  %+v", 404, o.Payload)
}
func (o *PatchCatalogColumnNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchCatalogColumnNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCatalogColumnUnprocessableEntity creates a PatchCatalogColumnUnprocessableEntity with default headers values
func NewPatchCatalogColumnUnprocessableEntity() *PatchCatalogColumnUnprocessableEntity {
	return &PatchCatalogColumnUnprocessableEntity{}
}

/* PatchCatalogColumnUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type PatchCatalogColumnUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *PatchCatalogColumnUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns/{columnid}][%d] patchCatalogColumnUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *PatchCatalogColumnUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchCatalogColumnUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCatalogColumnInternalServerError creates a PatchCatalogColumnInternalServerError with default headers values
func NewPatchCatalogColumnInternalServerError() *PatchCatalogColumnInternalServerError {
	return &PatchCatalogColumnInternalServerError{}
}

/* PatchCatalogColumnInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type PatchCatalogColumnInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *PatchCatalogColumnInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns/{columnid}][%d] patchCatalogColumnInternalServerError  %+v", 500, o.Payload)
}
func (o *PatchCatalogColumnInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PatchCatalogColumnInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
