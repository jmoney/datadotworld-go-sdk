// Code generated by go-swagger; DO NOT EDIT.

package sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetTableColumnsReader is a Reader for the GetTableColumns structure.
type GetTableColumnsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTableColumnsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTableColumnsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTableColumnsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTableColumnsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTableColumnsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTableColumnsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTableColumnsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTableColumnsOK creates a GetTableColumnsOK with default headers values
func NewGetTableColumnsOK() *GetTableColumnsOK {
	return &GetTableColumnsOK{}
}

/* GetTableColumnsOK describes a response with status code 200, with default header values.

Successfully retrieved metadata analysis
*/
type GetTableColumnsOK struct {
	Payload *models.PaginatedMetadataResourceResults
}

func (o *GetTableColumnsOK) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns][%d] getTableColumnsOK  %+v", 200, o.Payload)
}
func (o *GetTableColumnsOK) GetPayload() *models.PaginatedMetadataResourceResults {
	return o.Payload
}

func (o *GetTableColumnsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginatedMetadataResourceResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTableColumnsBadRequest creates a GetTableColumnsBadRequest with default headers values
func NewGetTableColumnsBadRequest() *GetTableColumnsBadRequest {
	return &GetTableColumnsBadRequest{}
}

/* GetTableColumnsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetTableColumnsBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetTableColumnsBadRequest) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns][%d] getTableColumnsBadRequest  %+v", 400, o.Payload)
}
func (o *GetTableColumnsBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetTableColumnsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTableColumnsUnauthorized creates a GetTableColumnsUnauthorized with default headers values
func NewGetTableColumnsUnauthorized() *GetTableColumnsUnauthorized {
	return &GetTableColumnsUnauthorized{}
}

/* GetTableColumnsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTableColumnsUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *GetTableColumnsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns][%d] getTableColumnsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetTableColumnsUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetTableColumnsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTableColumnsForbidden creates a GetTableColumnsForbidden with default headers values
func NewGetTableColumnsForbidden() *GetTableColumnsForbidden {
	return &GetTableColumnsForbidden{}
}

/* GetTableColumnsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetTableColumnsForbidden struct {
	Payload *models.ErrorMessage
}

func (o *GetTableColumnsForbidden) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns][%d] getTableColumnsForbidden  %+v", 403, o.Payload)
}
func (o *GetTableColumnsForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetTableColumnsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTableColumnsNotFound creates a GetTableColumnsNotFound with default headers values
func NewGetTableColumnsNotFound() *GetTableColumnsNotFound {
	return &GetTableColumnsNotFound{}
}

/* GetTableColumnsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetTableColumnsNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetTableColumnsNotFound) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns][%d] getTableColumnsNotFound  %+v", 404, o.Payload)
}
func (o *GetTableColumnsNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetTableColumnsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTableColumnsInternalServerError creates a GetTableColumnsInternalServerError with default headers values
func NewGetTableColumnsInternalServerError() *GetTableColumnsInternalServerError {
	return &GetTableColumnsInternalServerError{}
}

/* GetTableColumnsInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type GetTableColumnsInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *GetTableColumnsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}/columns][%d] getTableColumnsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetTableColumnsInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetTableColumnsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
