// Code generated by go-swagger; DO NOT EDIT.

package sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetDatabaseReader is a Reader for the GetDatabase structure.
type GetDatabaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDatabaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDatabaseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDatabaseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDatabaseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDatabaseOK creates a GetDatabaseOK with default headers values
func NewGetDatabaseOK() *GetDatabaseOK {
	return &GetDatabaseOK{}
}

/* GetDatabaseOK describes a response with status code 200, with default header values.

successful operation
*/
type GetDatabaseOK struct {
	Payload *models.DatabaseDbo
}

func (o *GetDatabaseOK) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}][%d] getDatabaseOK  %+v", 200, o.Payload)
}
func (o *GetDatabaseOK) GetPayload() *models.DatabaseDbo {
	return o.Payload
}

func (o *GetDatabaseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DatabaseDbo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatabaseBadRequest creates a GetDatabaseBadRequest with default headers values
func NewGetDatabaseBadRequest() *GetDatabaseBadRequest {
	return &GetDatabaseBadRequest{}
}

/* GetDatabaseBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDatabaseBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetDatabaseBadRequest) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}][%d] getDatabaseBadRequest  %+v", 400, o.Payload)
}
func (o *GetDatabaseBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetDatabaseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatabaseNotFound creates a GetDatabaseNotFound with default headers values
func NewGetDatabaseNotFound() *GetDatabaseNotFound {
	return &GetDatabaseNotFound{}
}

/* GetDatabaseNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetDatabaseNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetDatabaseNotFound) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}][%d] getDatabaseNotFound  %+v", 404, o.Payload)
}
func (o *GetDatabaseNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetDatabaseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
