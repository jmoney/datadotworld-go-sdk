// Code generated by go-swagger; DO NOT EDIT.

package sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// CreateCatalogTableReader is a Reader for the CreateCatalogTable structure.
type CreateCatalogTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCatalogTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateCatalogTableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateCatalogTableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateCatalogTableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateCatalogTableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateCatalogTableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateCatalogTableConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateCatalogTableUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateCatalogTableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateCatalogTableOK creates a CreateCatalogTableOK with default headers values
func NewCreateCatalogTableOK() *CreateCatalogTableOK {
	return &CreateCatalogTableOK{}
}

/* CreateCatalogTableOK describes a response with status code 200, with default header values.

Table Metadata created successfully.
*/
type CreateCatalogTableOK struct {
	Payload *models.CreateResponse
}

func (o *CreateCatalogTableOK) Error() string {
	return fmt.Sprintf("[POST /metadata/data/sources/{owner}/{sourceid}/tables][%d] createCatalogTableOK  %+v", 200, o.Payload)
}
func (o *CreateCatalogTableOK) GetPayload() *models.CreateResponse {
	return o.Payload
}

func (o *CreateCatalogTableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCatalogTableBadRequest creates a CreateCatalogTableBadRequest with default headers values
func NewCreateCatalogTableBadRequest() *CreateCatalogTableBadRequest {
	return &CreateCatalogTableBadRequest{}
}

/* CreateCatalogTableBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateCatalogTableBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *CreateCatalogTableBadRequest) Error() string {
	return fmt.Sprintf("[POST /metadata/data/sources/{owner}/{sourceid}/tables][%d] createCatalogTableBadRequest  %+v", 400, o.Payload)
}
func (o *CreateCatalogTableBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateCatalogTableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCatalogTableUnauthorized creates a CreateCatalogTableUnauthorized with default headers values
func NewCreateCatalogTableUnauthorized() *CreateCatalogTableUnauthorized {
	return &CreateCatalogTableUnauthorized{}
}

/* CreateCatalogTableUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateCatalogTableUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *CreateCatalogTableUnauthorized) Error() string {
	return fmt.Sprintf("[POST /metadata/data/sources/{owner}/{sourceid}/tables][%d] createCatalogTableUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateCatalogTableUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateCatalogTableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCatalogTableForbidden creates a CreateCatalogTableForbidden with default headers values
func NewCreateCatalogTableForbidden() *CreateCatalogTableForbidden {
	return &CreateCatalogTableForbidden{}
}

/* CreateCatalogTableForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateCatalogTableForbidden struct {
	Payload *models.ErrorMessage
}

func (o *CreateCatalogTableForbidden) Error() string {
	return fmt.Sprintf("[POST /metadata/data/sources/{owner}/{sourceid}/tables][%d] createCatalogTableForbidden  %+v", 403, o.Payload)
}
func (o *CreateCatalogTableForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateCatalogTableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCatalogTableNotFound creates a CreateCatalogTableNotFound with default headers values
func NewCreateCatalogTableNotFound() *CreateCatalogTableNotFound {
	return &CreateCatalogTableNotFound{}
}

/* CreateCatalogTableNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateCatalogTableNotFound struct {
	Payload *models.ErrorMessage
}

func (o *CreateCatalogTableNotFound) Error() string {
	return fmt.Sprintf("[POST /metadata/data/sources/{owner}/{sourceid}/tables][%d] createCatalogTableNotFound  %+v", 404, o.Payload)
}
func (o *CreateCatalogTableNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateCatalogTableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCatalogTableConflict creates a CreateCatalogTableConflict with default headers values
func NewCreateCatalogTableConflict() *CreateCatalogTableConflict {
	return &CreateCatalogTableConflict{}
}

/* CreateCatalogTableConflict describes a response with status code 409, with default header values.

Conflict
*/
type CreateCatalogTableConflict struct {
	Payload *models.ErrorMessage
}

func (o *CreateCatalogTableConflict) Error() string {
	return fmt.Sprintf("[POST /metadata/data/sources/{owner}/{sourceid}/tables][%d] createCatalogTableConflict  %+v", 409, o.Payload)
}
func (o *CreateCatalogTableConflict) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateCatalogTableConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCatalogTableUnprocessableEntity creates a CreateCatalogTableUnprocessableEntity with default headers values
func NewCreateCatalogTableUnprocessableEntity() *CreateCatalogTableUnprocessableEntity {
	return &CreateCatalogTableUnprocessableEntity{}
}

/* CreateCatalogTableUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type CreateCatalogTableUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *CreateCatalogTableUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /metadata/data/sources/{owner}/{sourceid}/tables][%d] createCatalogTableUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *CreateCatalogTableUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateCatalogTableUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCatalogTableInternalServerError creates a CreateCatalogTableInternalServerError with default headers values
func NewCreateCatalogTableInternalServerError() *CreateCatalogTableInternalServerError {
	return &CreateCatalogTableInternalServerError{}
}

/* CreateCatalogTableInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type CreateCatalogTableInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *CreateCatalogTableInternalServerError) Error() string {
	return fmt.Sprintf("[POST /metadata/data/sources/{owner}/{sourceid}/tables][%d] createCatalogTableInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateCatalogTableInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CreateCatalogTableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
