// Code generated by go-swagger; DO NOT EDIT.

package sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// GetTableReader is a Reader for the GetTable structure.
type GetTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTableOK creates a GetTableOK with default headers values
func NewGetTableOK() *GetTableOK {
	return &GetTableOK{}
}

/* GetTableOK describes a response with status code 200, with default header values.

successful operation
*/
type GetTableOK struct {
	Payload *models.MetadataResourceDto
}

func (o *GetTableOK) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}][%d] getTableOK  %+v", 200, o.Payload)
}
func (o *GetTableOK) GetPayload() *models.MetadataResourceDto {
	return o.Payload
}

func (o *GetTableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetadataResourceDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTableBadRequest creates a GetTableBadRequest with default headers values
func NewGetTableBadRequest() *GetTableBadRequest {
	return &GetTableBadRequest{}
}

/* GetTableBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTableBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *GetTableBadRequest) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}][%d] getTableBadRequest  %+v", 400, o.Payload)
}
func (o *GetTableBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetTableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTableNotFound creates a GetTableNotFound with default headers values
func NewGetTableNotFound() *GetTableNotFound {
	return &GetTableNotFound{}
}

/* GetTableNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetTableNotFound struct {
	Payload *models.ErrorMessage
}

func (o *GetTableNotFound) Error() string {
	return fmt.Sprintf("[GET /metadata/data/sources/{owner}/{sourceid}/tables/{tableid}][%d] getTableNotFound  %+v", 404, o.Payload)
}
func (o *GetTableNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GetTableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
