// Code generated by go-swagger; DO NOT EDIT.

package describe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// DescribeReader is a Reader for the Describe structure.
type DescribeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DescribeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDescribeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDescribeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDescribeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDescribeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDescribeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDescribeUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDescribeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDescribeOK creates a DescribeOK with default headers values
func NewDescribeOK() *DescribeOK {
	return &DescribeOK{}
}

/* DescribeOK describes a response with status code 200, with default header values.

The request has succeeded.
*/
type DescribeOK struct {
}

func (o *DescribeOK) Error() string {
	return fmt.Sprintf("[GET /describe][%d] describeOK ", 200)
}

func (o *DescribeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDescribeBadRequest creates a DescribeBadRequest with default headers values
func NewDescribeBadRequest() *DescribeBadRequest {
	return &DescribeBadRequest{}
}

/* DescribeBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DescribeBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *DescribeBadRequest) Error() string {
	return fmt.Sprintf("[GET /describe][%d] describeBadRequest  %+v", 400, o.Payload)
}
func (o *DescribeBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DescribeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeUnauthorized creates a DescribeUnauthorized with default headers values
func NewDescribeUnauthorized() *DescribeUnauthorized {
	return &DescribeUnauthorized{}
}

/* DescribeUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DescribeUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *DescribeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /describe][%d] describeUnauthorized  %+v", 401, o.Payload)
}
func (o *DescribeUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DescribeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeForbidden creates a DescribeForbidden with default headers values
func NewDescribeForbidden() *DescribeForbidden {
	return &DescribeForbidden{}
}

/* DescribeForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DescribeForbidden struct {
	Payload *models.ErrorMessage
}

func (o *DescribeForbidden) Error() string {
	return fmt.Sprintf("[GET /describe][%d] describeForbidden  %+v", 403, o.Payload)
}
func (o *DescribeForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DescribeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeNotFound creates a DescribeNotFound with default headers values
func NewDescribeNotFound() *DescribeNotFound {
	return &DescribeNotFound{}
}

/* DescribeNotFound describes a response with status code 404, with default header values.

Not found
*/
type DescribeNotFound struct {
	Payload *models.ErrorMessage
}

func (o *DescribeNotFound) Error() string {
	return fmt.Sprintf("[GET /describe][%d] describeNotFound  %+v", 404, o.Payload)
}
func (o *DescribeNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DescribeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeUnprocessableEntity creates a DescribeUnprocessableEntity with default headers values
func NewDescribeUnprocessableEntity() *DescribeUnprocessableEntity {
	return &DescribeUnprocessableEntity{}
}

/* DescribeUnprocessableEntity describes a response with status code 422, with default header values.

Bad request
*/
type DescribeUnprocessableEntity struct {
	Payload *models.ErrorMessage
}

func (o *DescribeUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /describe][%d] describeUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *DescribeUnprocessableEntity) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DescribeUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeInternalServerError creates a DescribeInternalServerError with default headers values
func NewDescribeInternalServerError() *DescribeInternalServerError {
	return &DescribeInternalServerError{}
}

/* DescribeInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DescribeInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *DescribeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /describe][%d] describeInternalServerError  %+v", 500, o.Payload)
}
func (o *DescribeInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DescribeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
