// Code generated by go-swagger; DO NOT EDIT.

package download

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// DownloadFileReader is a Reader for the DownloadFile structure.
type DownloadFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DownloadFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDownloadFileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDownloadFileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDownloadFileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDownloadFileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDownloadFileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDownloadFileOK creates a DownloadFileOK with default headers values
func NewDownloadFileOK() *DownloadFileOK {
	return &DownloadFileOK{}
}

/* DownloadFileOK describes a response with status code 200, with default header values.

The request has succeeded.
*/
type DownloadFileOK struct {
}

func (o *DownloadFileOK) Error() string {
	return fmt.Sprintf("[GET /file_download/{owner}/{id}/{file}][%d] downloadFileOK ", 200)
}

func (o *DownloadFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadFileBadRequest creates a DownloadFileBadRequest with default headers values
func NewDownloadFileBadRequest() *DownloadFileBadRequest {
	return &DownloadFileBadRequest{}
}

/* DownloadFileBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DownloadFileBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *DownloadFileBadRequest) Error() string {
	return fmt.Sprintf("[GET /file_download/{owner}/{id}/{file}][%d] downloadFileBadRequest  %+v", 400, o.Payload)
}
func (o *DownloadFileBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DownloadFileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadFileUnauthorized creates a DownloadFileUnauthorized with default headers values
func NewDownloadFileUnauthorized() *DownloadFileUnauthorized {
	return &DownloadFileUnauthorized{}
}

/* DownloadFileUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DownloadFileUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *DownloadFileUnauthorized) Error() string {
	return fmt.Sprintf("[GET /file_download/{owner}/{id}/{file}][%d] downloadFileUnauthorized  %+v", 401, o.Payload)
}
func (o *DownloadFileUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DownloadFileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadFileForbidden creates a DownloadFileForbidden with default headers values
func NewDownloadFileForbidden() *DownloadFileForbidden {
	return &DownloadFileForbidden{}
}

/* DownloadFileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DownloadFileForbidden struct {
	Payload *models.ErrorMessage
}

func (o *DownloadFileForbidden) Error() string {
	return fmt.Sprintf("[GET /file_download/{owner}/{id}/{file}][%d] downloadFileForbidden  %+v", 403, o.Payload)
}
func (o *DownloadFileForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DownloadFileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadFileNotFound creates a DownloadFileNotFound with default headers values
func NewDownloadFileNotFound() *DownloadFileNotFound {
	return &DownloadFileNotFound{}
}

/* DownloadFileNotFound describes a response with status code 404, with default header values.

Not found
*/
type DownloadFileNotFound struct {
	Payload *models.ErrorMessage
}

func (o *DownloadFileNotFound) Error() string {
	return fmt.Sprintf("[GET /file_download/{owner}/{id}/{file}][%d] downloadFileNotFound  %+v", 404, o.Payload)
}
func (o *DownloadFileNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DownloadFileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadFileInternalServerError creates a DownloadFileInternalServerError with default headers values
func NewDownloadFileInternalServerError() *DownloadFileInternalServerError {
	return &DownloadFileInternalServerError{}
}

/* DownloadFileInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DownloadFileInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *DownloadFileInternalServerError) Error() string {
	return fmt.Sprintf("[GET /file_download/{owner}/{id}/{file}][%d] downloadFileInternalServerError  %+v", 500, o.Payload)
}
func (o *DownloadFileInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DownloadFileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
