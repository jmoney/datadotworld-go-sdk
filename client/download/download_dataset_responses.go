// Code generated by go-swagger; DO NOT EDIT.

package download

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"datadotworld-go-sdk/models"
)

// DownloadDatasetReader is a Reader for the DownloadDataset structure.
type DownloadDatasetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DownloadDatasetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadDatasetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDownloadDatasetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDownloadDatasetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDownloadDatasetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDownloadDatasetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDownloadDatasetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDownloadDatasetOK creates a DownloadDatasetOK with default headers values
func NewDownloadDatasetOK() *DownloadDatasetOK {
	return &DownloadDatasetOK{}
}

/* DownloadDatasetOK describes a response with status code 200, with default header values.

The request has succeeded.
*/
type DownloadDatasetOK struct {
}

func (o *DownloadDatasetOK) Error() string {
	return fmt.Sprintf("[GET /download/{owner}/{id}][%d] downloadDatasetOK ", 200)
}

func (o *DownloadDatasetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadDatasetBadRequest creates a DownloadDatasetBadRequest with default headers values
func NewDownloadDatasetBadRequest() *DownloadDatasetBadRequest {
	return &DownloadDatasetBadRequest{}
}

/* DownloadDatasetBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DownloadDatasetBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *DownloadDatasetBadRequest) Error() string {
	return fmt.Sprintf("[GET /download/{owner}/{id}][%d] downloadDatasetBadRequest  %+v", 400, o.Payload)
}
func (o *DownloadDatasetBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DownloadDatasetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadDatasetUnauthorized creates a DownloadDatasetUnauthorized with default headers values
func NewDownloadDatasetUnauthorized() *DownloadDatasetUnauthorized {
	return &DownloadDatasetUnauthorized{}
}

/* DownloadDatasetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DownloadDatasetUnauthorized struct {
	Payload *models.ErrorMessage
}

func (o *DownloadDatasetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /download/{owner}/{id}][%d] downloadDatasetUnauthorized  %+v", 401, o.Payload)
}
func (o *DownloadDatasetUnauthorized) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DownloadDatasetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadDatasetForbidden creates a DownloadDatasetForbidden with default headers values
func NewDownloadDatasetForbidden() *DownloadDatasetForbidden {
	return &DownloadDatasetForbidden{}
}

/* DownloadDatasetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DownloadDatasetForbidden struct {
	Payload *models.ErrorMessage
}

func (o *DownloadDatasetForbidden) Error() string {
	return fmt.Sprintf("[GET /download/{owner}/{id}][%d] downloadDatasetForbidden  %+v", 403, o.Payload)
}
func (o *DownloadDatasetForbidden) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DownloadDatasetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadDatasetNotFound creates a DownloadDatasetNotFound with default headers values
func NewDownloadDatasetNotFound() *DownloadDatasetNotFound {
	return &DownloadDatasetNotFound{}
}

/* DownloadDatasetNotFound describes a response with status code 404, with default header values.

Not found
*/
type DownloadDatasetNotFound struct {
	Payload *models.ErrorMessage
}

func (o *DownloadDatasetNotFound) Error() string {
	return fmt.Sprintf("[GET /download/{owner}/{id}][%d] downloadDatasetNotFound  %+v", 404, o.Payload)
}
func (o *DownloadDatasetNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DownloadDatasetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadDatasetInternalServerError creates a DownloadDatasetInternalServerError with default headers values
func NewDownloadDatasetInternalServerError() *DownloadDatasetInternalServerError {
	return &DownloadDatasetInternalServerError{}
}

/* DownloadDatasetInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type DownloadDatasetInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *DownloadDatasetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /download/{owner}/{id}][%d] downloadDatasetInternalServerError  %+v", 500, o.Payload)
}
func (o *DownloadDatasetInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *DownloadDatasetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
