// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PaginatedResultsDto paginated results dto
//
// swagger:model PaginatedResultsDto
type PaginatedResultsDto struct {

	// count
	// Minimum: 0
	Count *int32 `json:"count,omitempty"`

	// next
	Next string `json:"next,omitempty"`

	// records
	Records []interface{} `json:"records"`
}

// Validate validates this paginated results dto
func (m *PaginatedResultsDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PaginatedResultsDto) validateCount(formats strfmt.Registry) error {
	if swag.IsZero(m.Count) { // not required
		return nil
	}

	if err := validate.MinimumInt("count", "body", int64(*m.Count), 0, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this paginated results dto based on context it is used
func (m *PaginatedResultsDto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PaginatedResultsDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PaginatedResultsDto) UnmarshalBinary(b []byte) error {
	var res PaginatedResultsDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
